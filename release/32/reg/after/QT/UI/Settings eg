#include <QCloseEvent>$NL#include <QSettings>$NL#include "debugApp.h"$NL$NL$NLpublic:$NL    void closeEvent(QCloseEvent *event);$NL$NL$NLprivate:$NL    void read_Setting();$NL    void proc_HistorySetting(int type);$NL    void read_HistorySetting();$NL    void write_HistorySetting();$NL	$NL    QSettings *m_pSettings;$NL    QString m_organization;$NL    QString m_application;$NL$NL$NLvoid \1::init_Vars()$NL{$NL    m_organization = "weilaidb";$NL    m_application = "codesets";$NL$NL}$NL$NLvoid \1::read_Setting()$NL{$NL    read_HistorySetting();$NL    add_MenuCodeFormatRecent();$NL    add_MenuDocumentOpenRecent();$NL    add_MenuDocumentSearchRecent();$NL    hide_PushButtonSets();$NL}$NL$NLvoid \1::proc_HistorySetting(int type)$NL{$NL    quint8 ucType = type;$NL    m_pSettings = CUIPub::read_HistorySettings(m_organization,m_application);$NL    CUIPub::procStringList(m_pSettings, BINDSTRWORDS(recentfiles_codeformat), ucType);$NL    CUIPub::procStringList(m_pSettings, BINDSTRWORDS(recentfiles_document), ucType);$NL    CUIPub::procString(m_pSettings, BINDSTRWORDS(openFilePathRecent), ucType);$NL    CUIPub::procString(m_pSettings, BINDSTRWORDS(openDirPathRecent), ucType);$NL    CUIPub::procString(m_pSettings, BINDSTRWORDS(openWordFilePathRecent), ucType);$NL    CUIPub::procAction(m_pSettings, ui->action_SwitchClearLeftText, ucType);$NL    CUIPub::procAction(m_pSettings, ui->action_ClipBoarChange, ucType);$NL    CUIPub::procAction(m_pSettings, ui->action_checknoexistpath, ucType);$NL    CUIPub::procAction(m_pSettings, ui->action_background_update, ucType);$NL    CUIPub::procAction(m_pSettings, ui->action_hidebuttonswitch, ucType);$NL}$NL$NLvoid \1::read_HistorySetting()$NL{$NL    proc_HistorySetting(CUIPub::TYPE_READ);$NL}$NL$NL$NLvoid \1::write_HistorySetting()$NL{$NL    proc_HistorySetting(CUIPub::TYPE_WRITE);$NL}$NL$NL$NLvoid \1::closeEvent(QCloseEvent *event)$NL{$NL    debugApp() << "closeEvent";$NL    write_HistorySetting();$NL    event->accept();$NL}$NL$NL