#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#filename:genvlanxml.py
#function:生成VLAN配置的XML格式
#

import sys
sys.path.append('.')
#自定义公共函数
from public import *
 

##########
#1.规则端口的类型，比如xk
#2.规定VLAN的添加的类型范围
#3.根据VLAN的类型范围依次添加
#4.后续根据文件中解析出来对应的端口类型（扩展）
#缩略语
#xk:线卡
#bfpga:大逻辑
#cfpga:控制逻辑
#osc:光监控商品
#shell:子架级联商品
#ms:主备端口
#eth1:连接CPU的
#eth2:连接CPU的

########main proc
print("===========main proc===========\n" * 3)


if len(sys.argv) < 2:
    print("usage: ./eg.sh RootPath\n")
    exit(0)

print(sys.argv)

rootpath=sys.argv[1]
typefile=concat(rootpath, ("/type_port.txt"))
vlanfile=concat(rootpath, ("/vlan_type.txt"))
xmlfile=concat(rootpath , ("/vlan.xml"))

# println(rootpath)
# println(typefile)
# println(vlanfile)
# println(xmlfile)

checkdirnoexistquit(rootpath)
checkfilenoexistquit(typefile)
checkfilenoexistquit(vlanfile)
# checkfilenoexistquit(xmlfile)



types = fileread(typefile)
printlntips("==>port types list", types)

vlans = fileread(vlanfile)
printlntips("==>port vlans list", vlans)

typelist = splitstrbyenternoempty(types)
lenlntips("typelist size", typelist)


vlanlist = splitstrbyenternoempty(vlans)
lenlntips("vlanlist size", vlanlist)



for vlan in vlanlist:
    println()
    println(vlan)
    sign=":"
    sign2=","
    vlanitems = splitstrbysignnoempty(vlan, sign)
    lenlntips("vlanitems size", vlanitems)
    if len(vlanitems) < 2:
        println("vlanitems should like this, vlanx:xk,bfpga")
        exit(0)
    vlantypesstr = vlanitems[1]
    vlantypes = splitstrbysignnoempty(vlantypesstr, sign2)
    lenlntips("vlantypes size", vlantypes)
    for vlantp in vlantypes:
        printlntips("vlan type:", vlantp, False)
        #根据类型查找所有相关端口
        findportlist = findstrinlist(vlantp, typelist)
        lenlntips("findportlist size", findportlist)
        for port in findportlist:
            #生成最终的XML配置，根据格式
            # printlntips("-->last xml by port", port)
            print("-->last xml, vlan-port:%s/%s" % (vlantp, port))


