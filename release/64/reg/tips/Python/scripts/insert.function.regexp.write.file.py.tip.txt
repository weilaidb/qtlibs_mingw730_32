#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#filename:insert.function.regexp.write.file.py
#function:正则表达式的结果函数写到对应文件

##########
#★

import sys
sys.path.append('.')
#自定义公共函数
from public import *



#####定义结束标志，标志未修改时为正常退出，默认为异常值，正常值为0
quitflag=1

def setquitflag(flag):
    global quitflag
    quitflag = flag

def over():
    global add
    printlntips("quitflag",quitflag, False)
    if 0 != quitflag:
        print('异常退出，！！！！！！！！')
    else:
        print('正常结束，★★★★★★★★★★★★★★★★')


atexit.register(over)

########main proc
if __name__ == '__main__':
    print("===========main proc===========\n" * 3)
    if len(sys.argv) < 2:
        print("usage: ./eg.sh input.txt\n")
        exit(0)

    print(sys.argv)
    
    signmao=":"
    signdot=","
    signenter="\n"
    signvlan="vlan"
    signempty = ""
    result = ""

    inputfilepath=sys.argv[1]
    outputfile_basefuncd="output.base.function.d" #基类声明
    outputfile_basefunci="output.base.function.i" #基类实现
    outputfile_implfuncd="output.impl.function.d" #子类声明
    outputfile_implfunci="output.impl.function.i" #子类实现

    println(inputfilepath)
    # # println(typeportfile)

    # checkdirnoexistquit(inputfilepath)
    checkfilenoexistquit(inputfilepath)
    # #执行前先删除XML文件
    filedelete(outputfile_basefuncd)
    filedelete(outputfile_basefunci)
    filedelete(outputfile_implfuncd)
    filedelete(outputfile_implfunci)

    inputfileinfo = fileread(inputfilepath)
    printlntips("inputfile info",inputfileinfo)


    splitlistinput = splitstrbyenter(inputfileinfo) 
    printlntips("splitlistinput info",splitlistinput)

    
    


    
    


    # vlanrangeinfo = fileread(vlanrangefile)
    # printlntips("vlanrangeinfo file", vlanrangeinfo)

    # typeportlist = splitstrbyenternoempty(typeportinfo)
    # # printlntips("typeportlist", typeportlist)

    # typelist = replacelistreg(typeportlist, r':.*', signempty)
    # lenlntips("typelist count", typelist)
    # printlntips("typelist", typelist,False)

    # vlanrangelist = splitstrbyenternoempty(vlanrangeinfo)
    # lenlntips("vlanrangelist count", vlanrangelist)

    # for vlanrange in vlanrangelist:
    #     println()
    #     println()
    #     printlntips("===>",vlanrange)
    #     vansplit = splitstrbysignnoempty(vlanrange, signmao)
    #     if len(vansplit) < 2:
    #         lenlntips("vansplit size", vansplit)
    #         println("vansplit should like this, vlanx:xk,bfpga")
    #         exit(0)
    #     vlannum = replacestr(vansplit[0],signvlan,signempty)
    #     ranges = vansplit[1]
    #     rangelist = splitstrbysignnoempty(ranges, signdot)
    #     lenlntips("rangelist", rangelist)
    #     for rangex in rangelist:
    #         println()
    #         printlntips("rangex", rangex, False)
            
    #         #判断当前类型是否在类型列表
    #         findtypelist = findstrinlist(rangex, typelist,True)
    #         # lenlntips("findtypelist size", findtypelist)
    #         if(0 == len(findtypelist)):
    #             print("!!!!!! invalid rangex:%s" % (rangex))
    #             printlntips("support typeportinfo", findtypelist)
    #             exit(0)
                
    #         #根据类型查找所有相关端口
    #         findtypeportlist = findstrinlist_replace(rangex, typeportlist, r':.*', signempty,True)
    #         lenlntips("findtypeportlist size", findtypeportlist)
    #         if(0 == len(findtypeportlist)):
    #             print("!!!!!! invalid rangex:%s" % (rangex))
    #             printlntips("support findtypeportlist", findtypeportlist)
    #             exit(0)

    #         for typeport in findtypeportlist:
    #             #生成最终的XML配置，根据格式
    #             portx = replacestrreg(typeport, r'.*:',signempty).strip()
    #             if(portx.isdigit()) and (vlannum.isdigit()):
    #                 print("-->xml, vlan-port:%s/%s" % (vlannum, portx))
    #                 result = concat(result, vlannum)
    #                 result = concat(result, signmao)
    #                 result = concat(result, portx)
    #                 result = concat(result, signenter)
    #             else:
    #                 print("!!!!!! invalid portx:%s or vlannum:%s" % (portx, vlannum))
    #                 exit(0)



    # print(sys._getframe().f_lineno)     # 获取当前行号(行数)
    # println(result)
    # filewrite(xmlfile, result)
    #设置成功标志
    setquitflag(0)
