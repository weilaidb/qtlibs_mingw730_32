python文本 maketrans和translate
2022-07-04 15:21 更新
python 文本 maketrans 和 translate
场景：

过滤字符串的某些字符，我们从例子出发

  >>> tb=str.maketrans ('abc','123')  
  >>> 'abcd'.translate (tb)  
  '123d'  
  >>> 'abcd+++a+b+cd'.translate (tb)  
  '123d+++1+2+3d'  
  >>>   
1. 建立字符映射表，也就是 maketrans 方法所做的事情，它返回一个字符串的映射表，意思是：如果字符串里面出现a，那么它就会变成对应的 1，如此类推，b->2,c->3

2. 使用 translate 方法，将字符串里面的字符改掉

注意：

1. 映射两遍的长度必须一致，不然报错，也就是说 'abc' 一定需要对于 '123' 或者 '234' 等，不能是 'abc' 对应 '12'，这个时候就报错

  >>> tb=str.maketrans ('abc','12')  
  Traceback (most recent call last):  
    File "", line 1, in   
      tb=str.maketrans ('abc','12')  
  ValueError: the first two maketrans arguments must have equal length  
  >>>   
2. 还需要注意的是，字符串的 translate 方法只接受一个参数，而 bytes 的 translate 方法是可以接收两个参数，而且第二个参数可以快速实现删除方法

  >>> bytes_tb = bytes.maketrans(b'abcd', b'ABCD')  
  >>> b'abcdefg'.translate (bytes_tb,b'a')  
  b'BCDefg'  
  >>>   
下面列举一些 translate 的一些应用方法：（注意：为了快速实现删除，所以下面的方法都是用 bytes 的 translate）

修改某些字符串：

  >>> def AToB(seq,frm,to):  
      if len(frm)or len(frm)>len(to):return '映射字符长度不一致'  
      else:  
          bytes_tb = bytes.maketrans(frm,to)  
          return seq.translate (bytes_tb)  
    
        
  >>> AToB(b'abcd',b'a',b't1')  
  '映射字符长度不一致'  
  >>> AToB(b'abcd',b'a1',b't')  
  '映射字符长度不一致'  
  >>> AToB(b'abcd',b'a',b't')  
  b'tbcd'  
  >>>   
删除某些字符串：

  >>> def AToB(seq,delete):  
      return seq.translate (None,delete)  
    
  >>> AToB(b'abcd',b'a')  
  b'bcd'  
  >>>   
保留某些字符：

  >>> def AToB(seq,keep):  
      delete=seq.translate (None,keep)  
      return seq.translate (None,"font-family: Arial, Helvetica, sans-serif;">delete)  
    
  >>> AToB(b'abcd',b'a')  
  b'a'  
  >>>   
以上内容是否对您有帮助：