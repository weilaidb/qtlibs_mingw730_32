1.11　本章小结
网站是指在因特网上根据一定的规则，使用HTML等工具制作并用于展示特定内容相关网页的集合。在早期，域名、空间服务器与程序是网站的基本组成部分，随着科技的不断进步，网站的组成也日趋复杂，目前多数网站由域名、空间服务器、DNS域名解析、网站程序和数据库等组成。


网站开发流程如下：
（1）需求分析：当拿到一个项目时，必须进行需求分析，清楚知道网站的类型、具体功能、业务逻辑以及网站的风格，此外还要确定域名、网站空间或者服务器以及网站备案等。
（2）规划静态内容：重新确定需求分析，并根据用户需求规划出网站的内容板块草图。
（3）设计阶段：根据网站草图，由美工制作成效果图。就好比建房子一样，首先画出效果图，然后才开始建房子，网站开发也是如此。
（4）程序开发阶段：根据草图划分页面结构和设计，前端和后台可以同时进行。前端根据美工效果负责制作静态页面；后台根据页面结构和设计，设计数据库数据结构和开发网站后台。
（5）测试和上线：在本地搭建服务器，测试网站是否存在Bug。若无问题，则可以将网站打包，使用FTP上传至网站空间或者服务器。
（6）维护推广：在网站上线之后，根据实际情况完善网站的不足，定期修复和升级，保障网站运营顺畅，然后对网站进行推广宣传等。
Django采用MTV的框架模式，即模型（Model）、模板（Template）和视图（Views），三者之间各自负责不同的职责。
●　模型：数据存取层，处理与数据相关的所有事务，例如如何存取、如何验证有效性、包含哪些行为以及数据之间的关系等。
●　模板：表现层，处理与表现相关的决定，例如如何在页面或其他类型的文档中进行显示。
●　视图：业务逻辑层，存取模型及调取恰当模板的相关逻辑，模型与模板的桥梁。
建议使用pip命令安装Django，安装的方法如下：

# 方法一
pip install Django
# 方法二
pip install D:\Django?3.1.4?py3?none?any.whl
两种不同的安装方法都是使用pip执行的，唯一的不同之处在于前者在安装过程中会从互联网下载安装包，而后者直接对本地已下载的安装包进行解压安装。Django安装完成后，在Python交互解释器模式校

验安装是否成功：

>>> import django
>>> django.__version__
Django的目录结构以及含义如下：
●　manage.py：命令行工具，内置多种方式与项目进行交互。在命令提示符窗口下，将路径切换到MyDjango项目并输入python manage.py help，可以查看该工具的指令信息。
●　__init__.py：初始化文件，一般情况下无须修改。
●　asgi.py：开启一个ASGI服务，ASGI是异步网关协议接口。
●　settings.py：项目的配置文件，项目的所有功能都需要从该文件里进行配置，配置说明会在第2章详细讲述。
●　urls.py：项目的路由设置，设置网站的具体网址内容。
●　wsgi.py：全称为Python Web Server Gateway Interface，即Python服务器网关接口，是Python应用与Web服务器之间的接口，用于Django项目在服务器上的部署和上线，一般不需要修改。
●　migrations：用于生成数据迁移文件，通过数据迁移文件可自动在数据库里生成相应的数据表。
●　__init__.py：index文件夹的初始化文件。
●　admin.py：用于设置当前App的后台管理功能。
●　apps.py：当前App的配置信息，在Django 1.9版本后自动生成，一般情况下无须修改。
●　models.py：定义数据库的映射类，每个类可以关联一张数据表，实现数据持久化，即MTV里面的模型（Model）。
●　tests.py：自动化测试的模块，用于实现单元测试。
●　views.py：视图文件，处理功能的业务逻辑，即MTV里面的视图（Views）。
Django入门部分需要了解Django的操作指令以及使用Django编写Hello World网页，同时要掌握项目开发的调试方法。