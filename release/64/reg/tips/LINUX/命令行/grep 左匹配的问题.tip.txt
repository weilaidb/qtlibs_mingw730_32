grep 左匹配的问题

抛物线.

于 2018-10-29 19:20:06 发布

1060
 收藏
分类专栏： Linux grep 文章标签： linux shell
版权

Linux
同时被 2 个专栏收录
108 篇文章6 订阅
订阅专栏

grep
4 篇文章0 订阅
订阅专栏
把(?<=a)b(?=c)这里面的a当成模式匹配，正确的是把b当做模式来匹配，a和c只是条件。模式匹配+条件成立才是匹配成功
这个就是(?<=a)和\K的区别
re\K 里的re，不是零宽的
第一个字符a，被‘a\K’的a匹配成功，开始往后找字符，直到(?=b)
总结：\K不是零宽,(?<=)是零宽

grep -o （only的意识） 只取出匹配的字符而非全行

(?<=) :向后匹配 (?<=) 括号中必须固定长度，比如"\s{2}",或者两个空格，但是不能写成\s或\s+ （必须固定长度，必需是零宽）
(?=) :向前匹配 括号中可以不用固定长度，可以写成\s 或\s+;\s*和\s+的区别就不多说了。

但是需求是逗号和冒号之间可能还有空白符号，所以(?<=)就鸡肋了，\K 装逼神器出场了。
\K与(?<=)的区别：

1)
1
(?<=)把要捕获的对象"xxoo"放在"?<=“的后面,eg:”(?<=xxoo)."
把要捕获的对象"xxoo"放在"\K"的前面,eg "xxoo\K."

2)
1
\K也是向后匹配,但是他不用固定位置,即（环视）,可以用\s*\K来表示向后匹配

eg:取出456
[root@local_game_server2 python_learn]# echo “: 456,”|grep -Po ‘(?<=: ).(?=,)’
456
[root@local_game_server2 python_learn]# echo “: 456,”|grep -Po '(?<=:\s{2}).(?=,)’
456
[root@local_game_server2 python_learn]# echo “: 456,”|grep -Po ‘:\s*\K.*(?=,)’
456


"\s"代表空白字符
"\S"代表非空白字符
"."代表任意字符
"*"代表前边字符重复0次或多次
"+"代表前边字符重复1次或多次
"?"代表前边字符重复0次或1次(懒惰匹配)

再来总结：\K和（？<=）

总结：
相同点：都可以用在grep –Po中对字符串匹配，且都是向左匹配
不同点：1）\K不是零宽,(?<=)是零宽 2）\K可以模糊量词，（?<=）量词要精确 3）写法不一样xxoo\K.,(?<=xxoo).
————————————————
版权声明：本文为CSDN博主「抛物线.」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/qq_28513801/article/details/83511526