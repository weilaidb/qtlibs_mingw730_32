一文看懂PPP协议——PPP协议简介

永远是少年啊

于 2021-07-08 22:12:33 发布

24311
 收藏 229
分类专栏： 计算机网络 文章标签： ppp ppp协议 数据链路层 计算机网络
版权

计算机网络
专栏收录该内容
143 篇文章339 订阅
订阅专栏
今天给大家介绍一下PPP协议的相关内容，文章浅显易懂，特别适合0基础同学。本文主将主要从PPP概述、PPP链路建立过程和PPP认证三个角度对PPP协议进行讲解。

一、PPP概述
PPP，point-to-point协议，即点对点协议，是数据链路层封装协议的一种。刚开始接触计算机网络的同学很多人都有一种误区，认为数据链路层网络等同于以太网，所有的数据链路层封装方式都是以太网格式的以太帧。但是其实数据链路层有很多种网络，其数据链路层封装方式有很多。目前，Internet协议普遍采用的是TCP/IP协议，只要不同的网络运行的网络运行的网络层协议是TCP/IP协议，不管数据链路层是什么协议，都可以接入到互联网大家庭。（实际上，这也是网络分层设计的一大好处之一）
PPP协议工作在串行接口和串行链路上，一般来说，PPP协议所构成的网络只允许双方之间通信，不允许像以太网一样接入交换机后接入其他的主机或设备。
刚才我们说过，PPP协议在数据链路层封装的是PPP帧，PPP帧格式如下：

上述字段介绍如下：
1、FLAG
在PPP协议中，头部和尾部都有一个Flag字段，Flag字段标识着一个PPP帧的开始和结束。FLAG字段长度8bit，固定为0x7e，因为PPP协议将FLAG设置为PPP帧的开始和结束，因此在一个PPP帧中不允许出现0x7e字段的数据，如果出现这样的数据，则需要进行特殊形式的转义。
2、Address
在PPP协议中，因为进行通信的只有两方，因此一方发送的数据总是另一方，这一点PPP协议不像以太网协议一样，必须使用MAC地址来表明数据帧的发送者和接收者。PPP协议中的Address字段取值固定为0xff。
3、Control
长度8bit，取值固定0x03，无特殊作用。
4、Protocol
长度16bit，其取值类似于以太网帧的类型，表明了上层数据的类型。
5、FCS
长度16bit，用于帧校验。一个设备在收到PPP帧后会进行PPP帧校验，如果发现PPP在传输过程中出错，该帧会被立即丢弃。PPP协议没有纠错和重传机制。

二、PPP链路建立
PPP帧从开始建立到能够正常转发数据包需要一段时间，并且需要经历协商验证过程。PPP链路建立共分5个阶段，过程如下：

在Link Dead阶段，PPP链路进行初始化，当物理层接口联通后，状态自动进入到Link Establishment阶段。
进入到Link Establishment阶段，通信双方互相发送LCP报文，进行参数协商，如果参数协商失败，则会回退到Link Dead阶段。如果参数协商成功，并且双方需要认证，则进入到authentication阶段，如果不需要认证，则会直接进入到Network Layer Protocol阶段。
在Authentication阶段，通信双方会进行认证。
在Network Layer Protocol阶段，双方会再次进行协商，这次协商主要协商网络层参数，比如发送自己的IP地址、子网掩码等信息，看是否存在IP地址冲突或者不属于一个网段等情况。如果参数协商一致，那么此时就可以进行正常的数据包传送了。
在Link Termination阶段，代表PPP链接终止，除了Link Dead阶段之外，任何协商过程失败都会进入这一阶段，而如果处于Network Layer Protocol阶段，管理员手动关闭了链路，也会进入这一状态。

三、PPP认证
PPP协议认证有PAP和CHAP两种方式。
如果采取PAP认证方式，在Link Establishment阶段中，一方会对另一方发送包含用户名和密码的Authentication Request报文，另一方会在自己的用户名密码列表中查找是否存在该用户名和密码。如果认证通过，则会向对方发送一个Authentication ACK报文，如果认证不通过，则会向对方发送一个Authentication Nak报文。而到了Authentication阶段，验证方和被验证方会交互重复上述过程。
注意，如果采用PAP认证方式，认证的用户名和口令都是采用明文传输，在安全性上存在一定的风险。
与PAP方式相比，CHAP认证方式大体与之相同，但是CHAP认证方式会将用户名和密码以密文的形式包含在报文中，因此在安全性方面有很大的提升。
原创不易，转载请说明出处：https://blog.csdn.net/weixin_40228200/article/details/118582795
————————————————
版权声明：本文为CSDN博主「永远是少年啊」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/weixin_40228200/article/details/118582795