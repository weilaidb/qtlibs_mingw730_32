https://blog.csdn.net/Brant_zero/article/details/125782333?spm=1000.2115.3001.6382&utm_medium=distribute.pc_feed_v2.none-task-blog-personrec_tag-5-125782333-null-null.pc_personrec&depth_1-utm_source=distribute.pc_feed_v2.none-task-blog-personrec_tag-5-125782333-null-null.pc_personrec


三、计数排序
计数排序算法原理如下：

计算出当前数据集合的范围区间range，即最大值 - 最小值。
开辟range大小的计数表(使用calloc)，记录每个数据出现的次数。
统计每个数出现的次数，放到减去最小值后其在计数表中的相对位置。
回写数据。遍历计数表，如果表中位置不为零，则直接回写到元素组中，其值为下标 + 最小值，则可将相对位置转回为绝对位置。


void CountSort(int* a, int n)
{
	int max = a[0];
	int min = a[0];
	for (int i = 1; i < n; i++)
	{
		if (max < a[i])
			max = a[i];
		if (min > a[i])
			min = a[i];
	}
	int range = max - min+1;
	int* temp = (int*)calloc(range, sizeof(int));
	for (int i = 0; i < n; i++)
	{
		temp[a[i] - min]++;
	}
	//回写
	int j = 0;
	for (int i=0;i<range;i++)
	{
		while (temp[i]--)
		{
			a[j++] = i+min;
		}
	}
}
————————————————
版权声明：本文为CSDN博主「Brant_zero2022」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/Brant_zero/article/details/125782333