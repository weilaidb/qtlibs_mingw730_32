vscode 使用 使用快捷键添加注释 （使用KoroFileHeader）

丝月

于 2020-08-25 17:09:57 发布

3654
 收藏 4
分类专栏： 前端 vscode
版权

前端
同时被 2 个专栏收录
15 篇文章0 订阅
订阅专栏

vscode
2 篇文章0 订阅
订阅专栏
1.安装插件KoroFileHeader

安装成功后就可以自动添加注释了
 

文件头部添加注释:

在文件开头添加注释，记录文件信息/文件的传参/出参等
支持用户高度自定义注释选项, 适配各种需求和注释。
保存文件的时候，自动更新最后的编辑时间和编辑人
快捷键：window：ctrl+alt+i,mac：ctrl+cmd+i, linux: ctrl+meta+i
在光标处添加函数注释:

在光标处自动生成一个注释模板
支持用户高度自定义注释选项
快捷键：window：ctrl+alt+t,mac：ctrl+cmd+t,linux: ctrl+meta+t
二、配置注释模板

在设置中搜索fileheader,



编辑配置文件,右侧添加配置

// 文件头部注释
    "fileheader.customMade": {
        "Descripttion": "",
        "Author": "xx",
        "Date": "Do not edit",
        "LastEditors": "xx",
        "LastEditTime": "Do not Edit"
    }


所有可配置字段如下（可查看https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE%E5%AD%97%E6%AE%B5）

// 头部注释
"fileheader.customMade": {
    // 头部注释默认字段
    "Author": "your name",
    "Date": "Do not edit", // 设置后默认设置文件生成时间
    "LastEditTime": "Do not edit", // 设置后，保存文件更改默认更新最后编辑时间
    "LastEditors": "your name", // 设置后，保存文件更改默认更新最后编辑人
    "Description": "",
    "FilePath": "Do not edit", // 设置后，默认生成文件相对于项目的路径
    "custom_string_obkoro1": "可以输入预定的版权声明、个性签名、空行等"
},
// 函数注释
"fileheader.cursorMode": {
  // 默认字段
  "description":"",
  "param":"",
  "return":""
},
// 插件配置项
"fileheader.configObj": {
    "autoAdd": true, // 检测文件没有头部注释，自动添加文件头部注释
    "autoAddLine": 100, // 文件超过多少行数 不再自动添加头部注释
    "autoAlready": true, // 只添加插件支持的语言以及用户通过`language`选项自定义的注释
    "supportAutoLanguage": [], // 设置之后，在数组内的文件才支持自动添加
   // 自动添加头部注释黑名单
   "prohibitAutoAdd": [
      "json"
    ],
    "prohibitItemAutoAdd": [ "项目的全称禁止项目自动添加头部注释, 使用快捷键自行添加" ],
    "wideSame": false, // 头部注释等宽设置
   "wideNum": 13,  // 头部注释字段长度 默认为13
   // 头部注释第几行插入
    "headInsertLine": {
      "php": 2 // php文件 插入到第二行
    },
    "beforeAnnotation": {}, // 头部注释之前插入内容
    "afterAnnotation": {}, // 头部注释之后插入内容
    "specialOptions": {}, // 特殊字段自定义
    "switch": {
      "newlineAddAnnotation": true // 默认遇到换行符(\r\n \n \r)添加注释符号
    },
    "moveCursor": true, // 自动移动光标到Description所在行
    "dateFormat": "YYYY-MM-DD HH:mm:ss",
    "atSymbol": "@", // 更改所有文件的自定义注释中的@符号
    "atSymbolObj": {}, //  更改单独语言/文件的@
    "colon": ": ", // 更改所有文件的注释冒号
    "colonObj": {}, //  更改单独语言/文件的冒号
    "filePathColon": "路径分隔符替换", // 默认值： mac: / window是: \
     "showErrorMessage": false, // 是否显示插件错误通知 用于debugger
    "CheckFileChange": false, // 单个文件保存时进行diff检查
    "createHeader": true, // 新建文件自动添加头部注释
    "useWorker": false, // 是否使用工作区设置
    "designAddHead": false, // 添加注释图案时添加头部注释
    "typeParam": true, // 选项用于控制函数注释参数是否需要{type}, 默认需要
     // 自定义语言注释符号，覆盖插件的注释格式
    "language": { 
        "java": {
            "head": "/$$",
            "middle": " $ @",
            "end": " $/"
        },
       // 一次匹配多种文件后缀文件 不用重复设置
       "h/hpp/cpp": {
          "head": "/*** ", // 统一增加几个*号
          "middle": " * @",
          "end": " */"
        },
        // 针对有特殊要求的文件如：test.blade.php
        "blade.php":{
          "head": "<!--",
          "middle": " * @",
          "end": "-->",
        }
    },
 // 默认注释  没有匹配到注释符号的时候使用。
 "annotationStr": { 
      "head": "/*",
      "middle": " * @",
      "end": " */",
      "use": false
    },
}
配置完后就可以使用快捷键添加注释了
————————————————
版权声明：本文为CSDN博主「丝月」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/SHUIYI_24/article/details/108224568