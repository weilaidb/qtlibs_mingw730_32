[关键字;提示;实际内容]
编辑插件
:UltiSnipsEdit


wel@welcome to china@welcome to china$NLhaha!!

C和C++

=====测试gtest
gtestmakefile@gtest Cmakefiles@project(${1:chapterFirstExample})$NLcmake_minimum_required(VERSION 2.6)$NL$NLinclude_directories($ENV{GMOCK_HOME}/include $ENV{GMOCK_HOME}/gtest/include)$NLinclude_directories(./)$NLinclude_directories(./include)$NLlink_directories($ENV{GMOCK_HOME}/mybuild $ENV{GMOCK_HOME}/gtest/mybuild)$NLadd_definitions(-std=c++0x)$NLset(CMAKE_CXX_FLAGS "${CMAXE_CXX_FLAGS} -Wall")$NL$NLset(sources $NL   main.cpp$NL   ${2:test.cpp}$NL   )$NLadd_executable(test ${sources})$NLtarget_link_libraries(test pthread)$NLtarget_link_libraries(test gmock)$NLtarget_link_libraries(test gtest)

gtestmain@gtest main@#include "gmock/gmock.h"$NLint main(int argc, char** argv) {$NL$TBtesting::InitGoogleMock(&argc, argv);$NL$TBreturn RUN_ALL_TESTS();$NL}     
headergtest@gtest header@#include "gmock/gmock.h"$NLusing namespace ::testing; 
gtestclass@gtest class parent is Test@#include "gmock/gmock.h"$NLusing namespace ::testing;$NL$NL$NLclass A${1:RetweetCollection}: public Test {    $NLpublic:    $NL$1 ${2:collection};    $NL};    $NLTEST_F(A$1, ${3:IsEmptyWhenCreated}) {    $NLASSERT_TRUE(1);    $NL//   ASSERT_TRUE($2.isEmpty());    $NL}  
gtestf@gtest TEST_F@TEST_F(${1:AnTest}, ${2:isEmpty})$NL{$NL    ASSERT_THAT(1, Eq(1));$NL}





====头文件
headerc@;c headers@#include <stdio.h>$NL#include <stdlib.h>$NL#include <unistd.h>$NL#include <string.h>$NL#include <sys/types.h>$NL#include <sys/time.h>$NL#include <sys/fcntl.h>$NL#include <assert.h>$NL#include <stdarg.h>$NL

headercpp@c++ headers@#include <iostream>$NL#include <string>$NL#include <vector>$NL#include <map>$NL#include <iomanip>$NLusing namespace std;$NL



=====插入特殊符号
插入*号
signxh@insert * sign multiline@/**$NL**$NL**/



=====宏
definemax@define max@#undef MAX$NL#define MAX(a,b) ((a)>(b)?(a):(b))
definemin@define min@#undef MIN$NL#define MIN(a,b) ((a)<(b)?(a):(b))
defineentertips@define ENTERTIPS@/*文件、 函数 、 行 */$NL#undef ENTERTIPS$NL#define ENTERTIPS fprintf(stdout, "%s:%s:%d\n", __FILE__, __FUNCTION__ , __LINE__ );
definearraysize@define ARRAY_SIZE@#undef ARRAY_SIZE$NL#define ARRAY_SIZE(arr) ((unsigned)(sizeof(arr) / sizeof((arr)[0])))
if0@mark if 0@$NL#if 0$NL#endif$NL


=====基本类型
basetype@typedef base type@typedef char CHAR;$NLtypedef unsigned char BYTE;$NLtypedef unsigned char BOOLEAN;$NLtypedef char INT8;$NLtypedef short INT16;$NLtypedef int INT32;$NLtypedef long long INT64;$NLtypedef unsigned char UINT8;$NLtypedef unsigned short UINT16;$NLtypedef unsigned int UINT32;$NLtypedef unsigned long long UINT64;$NLtypedef unsigned short WORD;$NLtypedef unsigned short WORD16;$NLtypedef unsigned int   WORD32;$NLtypedef unsigned long long WORD64;


=====结构体struct
st2@typedef struct T_xx{}T_xx, *P_xx@typedef struct T_${1:`!p snip.rv = (snip.basename or "name")`}$NL{$NL$TB${0:/* data */}$NL$TBint m_t1;$NL$NL}T_$1, *P_$1;

stoper@typedef struct T_xx{}T_xx, *P_xx with operator <@typedef struct T_${1:`!p snip.rv = (snip.basename or "name")`}$NL{$NL    ${0:/* data */}$NL    int m_x;$NL    BOOLEAN operator<( const T_$1 b ) { return this->m_x < b.m_x; }$NL    BOOLEAN operator>( const T_$1 b ) { return this->m_x > b.m_x; }$NL}T_$1, *P_$1;$NL



=====变量
vari@define var int@int ${1:i} = 0;
varui@define var unsigned int@unsigned int ${1:i} = 0;
varf@define var float@float ${1:i} = 0.0;
vard@define var double@double ${1:i} = 0.0;
varc@define var char@char ${1:i} = 0;
varpc@define var char pointer@char *${1:i} = NULL;
varpuc@define var unsigned char pointer@unsigned char *${1:i} = NULL;



=====条件
conditionswitch@condition of switch case@$NLswitch ( $1 )$NL{$NLcase $2:$NL    break;$NLdefault:$NL    break;$NL}




=====函数
funcv@function return void@void $1() $NL{$NL$NL}
funci@function return int@int $1() $NL{$NL$NL    return 0;$NL}
funcui@function return unsigned int@unsigned int $1() $NL{$NL$NL    return 0;$NL}
funchello@function print helloworld!!!@int helloworld() $NL{$NL$NL        printf("hello world!!\n");$NL    return 0;$NL}
funchelloworld@function print helloworld!!!@int helloworld() $NL{$NL$NL    printf("hello world!!\n");$NL    return 0;$NL}
getteri@function get variable,return int@int ${1:g_iTest} = 0;$NLint ${2:getter}() $NL{$NL$TBreturn $1;$NL}
getterui@function get variable,return unsigned int@unsigned int ${1:g_iTest} = 0;$NLunsigned int ${2:getter}() $NL{$NL$TBreturn $1;$NL}

setteri@function set variable,return int@int ${1:g_iTest} = 0;$NLint ${2:setter}() $NL{$NL$TBreturn $1;$NL}$NL$NLint ${2:getter}() $NL{$NL$TBreturn $1;$NL}
setterui@function set variable,return unsigned int@unsigned int ${1:g_iTest} = 0;$NLunsigned int ${2:setter}() $NL{$NL$TBreturn $1;$NL}$NL$NLunsigned int ${2:getter}() $NL{$NL$TBreturn $1;$NL}


=====打印
helloworld@print hello world@printf("hello,world!!\n");
printff@print float@printf("%f\n",$1);
printfui@print unsigned int@printf("%u\n",$1);
printfi@print int@printf("%d\n",$1);
printfint@print int@printf("%d\n",$1);
printfld@print long@printf("%ld\n",$1);
printflld@print long long@printf("%lld\n",$1);
printflu@print unsigned long@printf("%lu\n",$1);
printfllu@print unsigned long long@printf("%llu\n",$1);




=====for loop for array







=====注释
commenth@comments for header@/***************************************************************************$NL** 版权所有:  WeiLai Copyright (c) 2020-2030$NL** 文件名称:  ${1:`!p$NLif not snip.c:$NL	import random, string$NL	snip.rv = snip.fn$NLelse:$NL	snip.rv = snip.c`}$NL    $NL** 当前版本:  v1.0$NL** 作    者:$NL** 完成日期: `date +%Y-%m-%d`$NL** 修改记录:$NL** 修改日期:$NL** 版本号  :$NL** 修改人  :$NL** 修改内容:$NL***************************************************************************/$NL#ifndef ${2:`!p$NLif not snip.c:$NL	import random, string$NL	name = re.sub(r'[^A-Za-z0-9]+','_', snip.basename ).upper()$NL	rand = ''.join('H')$NL	snip.rv = ('%s_%s' % (name,rand)).upper()$NLelse:$NL	snip.rv = snip.c`}$NL#define $2$NL/*****************************头文件****************************************/$NL$NL/*****************************宏定义****************************************/$NL$NL/*****************************结构体或类型定义*******************************/$NL$NL$NL/*****************************全局变量****************************************/$NL$NL$NL/*****************************本地变量****************************************/$NL$NL$NL/*****************************函数或类声明****************************************/$NL$NL$NL/*****************************函数或类实现****************************************/$NL$NL$NL$NL$NL$NL$NL$NL$NL/*****************************by extern "C"****************************************/$NL$NL#ifdef __cplusplus$NLextern "C" {$NL#endif$NL/*****************************头文件****************************************/$NL$NL$NL/*****************************宏定义****************************************/$NL$NL$NL/*****************************结构体或类型定义*******************************/$NL$NL$NL/*****************************全局变量****************************************/$NL$NL$NL/*****************************本地变量****************************************/$NL$NL$NL/*****************************函数或类声明****************************************/$NL$NL$NL/*****************************函数或类实现****************************************/$NL$NL$NL#ifdef __cplusplus$NL}$NL#endif$NL$NL$NL$NL$NL$NL#endif /* $2 */$NL


comments@comments for source@/***************************************************************************$NL** 版权所有:  WeiLai Copyright (c) 2020-2030  ******************************$NL** 文件名称:  ${1:`!p$NLif not snip.c:$NL	import random, string$NL	snip.rv = snip.fn$NLelse:$NL	snip.rv = snip.c`}$NL** 当前版本:  v1.0$NL** 作    者:$NL** 完成日期: `date +%Y-%m-%d`$NL** 修改记录:$NL** 修改日期:$NL** 版本号  :$NL** 修改人  :$NL** 修改内容:$NL***************************************************************************/$NL$NL$NL/*****************************头文件****************************************/$NL$NL/*****************************宏定义****************************************/$NL$NL/*****************************结构体或类型定义*******************************/$NL$NL$NL/*****************************全局变量****************************************/$NL$NL$NL/*****************************本地变量****************************************/$NL$NL$NL/*****************************函数或类声明****************************************/$NL$NL$NL/*****************************函数或类实现****************************************/$NL$NL$NL$NL$NL$NL$NL$NL$NL/*****************************by extern "C"****************************************/$NL$NL#ifdef __cplusplus$NLextern "C" {$NL#endif$NL/*****************************头文件****************************************/$NL$NL$NL/*****************************宏定义****************************************/$NL$NL$NL/*****************************结构体或类型定义*******************************/$NL$NL$NL/*****************************全局变量****************************************/$NL$NL$NL/*****************************本地变量****************************************/$NL$NL$NL/*****************************函数或类声明****************************************/$NL$NL$NL/*****************************函数或类实现****************************************/$NL$NL$NL#ifdef __cplusplus$NL}$NL#endif$NL$NL




















end