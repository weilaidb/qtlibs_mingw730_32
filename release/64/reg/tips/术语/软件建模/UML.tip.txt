基本概念列表
模型：(Model)是对现实世界的简化。它是现实事物的一种微缩表示，或是一种用于生产某事物的模式，也只可以是一种设计或类型，还可以是一个待模仿或仿真的样例。
软件建模：对业务系统软件的抽象描述
业务系统：见详情
建模目的：
1)模型帮助我们按照实际情况对系统进行可视化
2)模型允许我们详细说明系统
3)模型给出了一个指导我们构造系统的模板
4)模型对我们做出的决策进行模板化
建模原则：
1）要仔细地选择模型
2）每一种模型可以在不同的精度级别上表示所要开发的系统
3）模型要与实际相联系
4）对一个重要的系统用一组几乎独立的模型去处理
UML:（Unified Modeling Language,统一建模语言）是一种可视化的建模语言，主要应用于软件工程领域。用于对软件系统进行描述、可视化处理、构造和建立系统的工作文档。它记录了与被设计系统有关的决策和分析，可用于对系统的分析、设计、浏览、配置、维护以及控制。UML包括语义概念、表示法和指导规范，提供了静态、动态、系统环境和组织结构等类型的模型。UML能够捕捉系统静态结构和动态行为的信息。静态结构定义了系统中重要对象的属性和操作，以及这些对象之间的关系。动态行为定义了对象随时间变化的历史和对象为完成目标而进行的相互通信。UML能从不同的角度对系统进行建模，因此可以全方位的帮助用户了解和分析系统。
UML体系组成：（3部分）UML基本构造块、UML规则和UML公共机制。
UML基本构造块：（3种）事物、关系、图
事物：（4种）包括结构事物、行为事物、分组事物、注释事物
关系：（4种）依赖关系、关联关系、泛化关系、实现关系
图：（9种）类图、对象图、用例图、顺序图、协作图、状态图、活动图、组件图、部署图
UML规则：“命名”、“范围”、“可见性”、“完整性”、“执行”等
软件：是计算机系统中与硬件相互依存的另一部分，它是包括程序、数据及其相关文档的完整集合。
软件特征：
1)软件是被开发或设计的，而不是被制造的
2)软件不会“磨损”，但会“退化”
3)软件的开发至今尚未摆脱手工艺的开发方式
4)软件是复杂的
软件划分方式：
软件危机：
软件工程阶段：
软件生存期：计划、需求分析和定义、软件设计（详细设计)、编码、软件测试、维护
软件生存期模型：瀑布模型和原型实现模型等
面向对象软件工程方法：
面向对象：
对象：
类：
继承：
通信：
面向对象应用开发过程：
Rational统一过程：
软件架构：狭义来说，是指可复用的、提供明确接口完成特定功能的程序代码块。
软件构件：软件、模块、包或子系统的一个重要部分。可以把构件想象成硬件系统里的一个个“零件”。构件可以独立开发（需求分析、设计、编码、测试）、部署和发布。构件是一个高内聚的软件包，通过接口对外交互，屏蔽了内部实现细节，它可通过独立开发封装为符合业界认可的模型标准的二进制代码。
RUP的模型元素：（4种）工作人员、活动、制品、工作流。
RUP软件开发方法（实践）：
1)迭代的开发软件
2)需求管理
3)应用基于构件的构架
4)建立可视化模型
5)不断地验证软件质量
6)配置管理和变更管理
事物：对模型中最有代表性的成分的抽象
结构事件：(structural thing)指软件模型的静态部分，描述概念或物理元素。
UML结构事件种类：类(class)、组件(component)、接口(interface)、协作(collaboration)、用例(use case)、节点(node)、主动类(active class)
类(class):具有相同属性和操作的一组对象集合的抽象描述。图形上，用一矩形来表示，写有类的名称、属性和操作。
组件(component):系统中物理的、可替代的部件，用于描述一些逻辑元素（如类、接口）的物理包。图形上，由一个带有小方框的矩形表示

接口(interface):描述类或组件的服务操作集，描述了类或组件对外的、可见的动作。类可以实现一个或多个接口。图形上，接口用一个带有名称的圆表示。接口很少单独存在，依附于实现接口的类或组件。
协作(collaboration)：是一组类、接口和其他元素的群体，它们共同工作，提供比各组成部分的功能总和更强的合作行为。与组件不同，协作不能拥有自己的结构事物，而只能引用其他地方定义的类、接口、组件、节点等事物，即协作是系统体系结构中的概念组块而不是物理组块。图形上，协作用一个包含名称的虚线椭圆表示。
用例（use case)：一组序列动作的描述，系统执行这些动作将对用例的角色（actor, 参与者，角色）产生可以观察的结果。图形上，用实线椭圆表示。角色用一个人形图案表示。
































《详情》
业务系统：
是指为组织或企业的日常运营和管理提供支持的一套软件应用程序。它们通常涵盖多个功能模块，包括销售、采购、库存管理、财务、人力资源、客户关系管理等。业务系统旨在帮助组织实现业务流程的自动化、集成和优化，提高工作效率、降低成本，并提供准确的数据和报告用于决策和分析。

业务系统可以是定制开发的，根据组织的特定需求进行设计和构建；也可以是商业软件产品，提供通用的业务功能，组织可以根据自身需求进行配置和定制。

常见的业务系统包括企业资源计划（ERP）系统、客户关系管理（CRM）系统、供应链管理（SCM）系统、人力资源管理（HRM）系统等。这些系统通过集成各个部门和功能，帮助组织实现更高效的业务流程和更好的决策支持。
