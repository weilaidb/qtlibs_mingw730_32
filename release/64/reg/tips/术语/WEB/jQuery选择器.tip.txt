19.4　jQuery选择器
开发人员在实现页面的业务逻辑时，必须操作相应的对象或者数组，这个时候就需要利用选择器选择匹配的元素，以便进行下一步操作。所以选择器是一切页面操作的基础，没有它开发人员将无所适从。在传统的JavaScript中，只能根据元素的id和TagName来获取相应的DOM元素。但是jQuery中却提供了许多功能强大的选择器帮助开发人员获取页面上的DOM元素，获取到的每个对象都将以jQuery包装集的形式返回。本节将介绍如何应用jQuery的选择器选择匹配的元素。
19.4.1　jQuery的工厂函数
在介绍jQuery的选择器之前，我们先来介绍一下jQuery的工厂函数“＄”。在jQuery中，无论我们使用哪种类型的选择符，都需要从一个“＄”符号和一对“()”开始。在“()”中通常使用字符串参数，参数中可以包含任何CSS选择符表达式。下面介绍几种比较常见的用法。
（1）在参数中使用标记名
＄("div")：用于获取文档中全部的＜div＞。
（2）在参数中使用id
＄("#username")：用于获取文档中id属性值为username的一个元素。
（3）在参数中使用CSS类名
＄(".btn_grey")：用于获取文档中使用CSS类名为btn_grey的所有元素。
19.4.2　基本选择器
基本选择器在实际应用中比较广泛。建议重点掌握jQuery的基本选择器，它是其他类型选择器的基础。基本选择器是jQuery选择器中最为重要的部分。jQuery基本选择器包括ID选择器、元素选择器、类名选择器、复合选择器和通配符选择器。下面进行详细介绍。
1.ID选择器（#id）
ID选择器（#id），顾名思义，就是利用DOM元素的id属性值来筛选匹配的元素，并以jQuery包装集的形式返给对象。这就像一个学校中每个学生都有自己的学号一样，学生的姓名是可以重复的，但是学号却是不可以重复的，根据学生的学号就可以获取指定学生的信息。
ID选择器的使用方法如下：
$("#id");
其中，id为要查询元素的id属性值。例如，要查询id属性值为user的元素，可以使用下面的jQuery代码：

$("#user");
注意　如果页面中出现了两个相同的id属性值，程序运行时页面会报出JS运行错误的对话框，所以在页面中设置id属性值时要确保该属性值在页面中是唯一的。






图　19.12　弹出的提示对话框 
jQuery中的ID选择器相当于传统的JavaScript中的document.getElementById方法，jQuery用更简洁的代码实现了相同的功能。虽然两者都获取了指定的元素对象，但是两者调用的方法是不同的。利用JavaScript获取的对象只能调用DOM方法，而利用jQuery获取的对象既可以使用jQuery封装的方法，也可以使用DOM方法。但是jQuery在调用DOM方法时需要进行特殊的处理，也就是需要将jQuery对象转换为DOM对象。
2.元素选择器（element）
元素选择器是根据元素名称匹配相应的元素。通俗地讲，元素选择器指向的是DOM元素的标记名。也就是说，元素选择器是根据元素的标记名选择的。可以把元素的标记名理解成学生的姓名。在一个学校中可能有多个姓名为“刘伟”的学生，但是姓名为“吴语”的学生也许只有一个。所以通过元素选择器匹配到的元素可能有多个，也可能是一个。多数情况下，元素选择器匹配的是一组元素。
元素选择器的使用方法如下：
$("element");
其中，element为要查询元素的标记名。例如，要查询全部div元素，可以使用下面的jQuery代码：
$("div");


【例19.2】在页面中添加两个＜div＞标记和一个按钮，通过单击按钮来获取这两个＜div＞，并修改它们的内容。
实例位置：光盘\MR\源码\第19章\19.2
Step 1　创建一个名称为index.html的文件，在该文件的＜head＞标记中应用下面的语句引入jQuery库。
＜script type="text/javascript" src="JS/jquery-1.6.1.min.js"＞＜/script＞
Step 2　在页面的＜body＞标记中，添加两个＜div＞标记和一个按钮，代码如下：
＜div＞＜img src="images/strawberry.jpg"/＞这里种植了一棵草莓＜/div＞
＜div＞＜img src="images/fish.jpg"/＞这里养殖了一条鱼＜/div＞
＜input type="button" value="若干年后"/＞
Step 3　在引入jQuery库的代码下方编写jQuery代码，实现单击按钮来获取全部＜div＞元素，并修改它们的内容，具体代码如下：




＜script type="text/javascript"＞
$(document).ready(function(){
$("input[type='button']").click(function(){//为按钮绑定单击事件
$("div").eq(0).html("＜img src='images/strawberry1.jpg'/＞这里长出了一片草莓");//获取第一个div元素
$("div").get(1).innerHTML="＜img src='images/fish1.jpg'/＞这里的鱼没有了";//获取第二个div元素
});
});
＜/script＞
在上面的代码中，使用元素选择器获取了一组div元素的jQuery包装集。它是一组Object对象，存储方式为[Object Object]，但是这种方式并不能显示出单独元素的文本信息，需要通过索引器来确定要选取哪个div元素，在这里分别使用了两个不同的索引器eq和get。这里的索引器类似于房间的门牌号，所不同的是，门牌号是从1开始计数的，而索引器是从0开始计数的。
说明　本实例中使用了两种方法设置元素的文本内容，html方法是jQuery的方法，innerHTML方法是DOM对象的方法。这里还用了＄(document).ready()方法，当页面元素载入就绪的时候，就会自动执行程序，自动为按钮绑定单击事件。
注意　eq方法返回的是一个jQuery包装集，所以它只能调用jQuery的方法；而get方法返回的是一个DOM对象，所以它只能用DOM对象的方法。eq方法与get方法默认都是从0开始计数的。
$("#test").get(0)等效于$("#test")[0]。
在IE浏览器中运行本实例，首先显示如图19.13所示的页面，单击“若干年后”按钮，将显示如图19.14所示的页面。



3.类名选择器（.class）
类名选择器是通过元素拥有的CSS类的名称查找匹配的DOM元素。在一个页面中，一个元素可以有多个CSS类，一个CSS类又可以匹配多个元素。如果某元素有一个匹配的类的名称，就可以被类名选择器选取到。
类名选择器很好理解。在大学的时候大部分人一定都选过课，可以把CSS类名理解为课程名称，元素理解成学生，学生可以选择多门课程，而一门课程又可以被多名


学生所选择。CSS类与元素的关系既可以是多对多的关系，也可以是一对多或多对一的关系。简单地说，类名选择器就是以元素具有的CSS类名称查找匹配的元素。
类名选择器的使用方法如下：
$(".class");
其中，class为要查询元素所用的CSS类名。例如，要查询使用CSS类名为word_orange的元素，可以使用下面的jQuery代码：
$("word_orange");
【例19.3】在页面中，首先添加两个＜div＞标记，并为其中的一个设置CSS类，然后通过jQuery的类名选择器选取设置了CSS类的＜div＞标记，并设置其CSS样式。
实例位置：光盘\MR\源码\第19章\19.3
Step 1　创建一个名称为index.html的文件，在该文件的＜head＞标记中应用下面的语句引入jQuery库。
＜script type="text/javascript" src="JS/jquery-1.6.1.min.js"＞＜/script＞
Step 2　在页面的＜body＞标记中，添加两个＜div＞标记，一个使用CSS类myClass，另一个不设置CSS类，代码如下：
＜div class="myClass"＞注意观察我的样式＜/div＞
＜div＞我的样式是默认的＜/div＞
说明　这里添加两个＜div＞标记是为了对比效果，默认的背景颜色都是蓝色的，文字颜色都是黑色的。
Step 3　在引入jQuery库的代码下方编写jQuery代码，实现按CSS类名选取DOM元素，并更改其样式（这里更改了背景颜色和文字颜色），具体代码如下：
＜script type="text/javascript"＞
$(document).ready(function(){
var myClass=$(".myClass");//选取DOM元素
myClass.css("background-color","#C50210");//为选取的DOM元素设置背景颜色
myClass.css("color","#FFF");//为选取的DOM元素设置文字颜色
});
＜/script＞
在上面的代码中，只为其中的一个＜div＞标记设置了CSS类名称，但是由于程序中并没有名称为myClass的CSS类，所以这个类是没有任何属性的。类名选择器将返回一个名为myClass的jQuery包装集，利用css方法可以为对应的div元素设定CSS属性值，这里将元素的背景颜色设置为深红色，文字颜色设置为白色。
在IE浏览器中运行本实例，将显示如图19.15所示的页面。其中，左面的DIV为更改样式后的效果，右面的DIV为默认的样式。由于使用了＄(document).ready()方法，所以选择元素并更改样式，在DOM元素加载就绪时就已经自动执行完毕。





4.复合选择器（selector1,selector2,selectorN）
复合选择器将多个选择器（可以是ID选择器、元素选择器或是类名选择器）组合在一起，两个选择器之间以逗号“，”分隔。只要符合其中的任何一个筛选条件，就会被匹配，返回的是一个集合形式的jQuery包装集。利用jQuery索引器可以取得集合中的jQuery对象。
注意　多种匹配条件的选择器并不是匹配同时满足这几个选择器的匹配条件的元素，而是将每个选择器匹配的元素合并后一起返回。
复合选择器的使用方法如下：
$("selector1,selector2,selectorN");
selector1：为一个有效的选择器，可以是ID选择器、元素选择器或是类名选择器等。
selector2：为另一个有效的选择器，可以是ID选择器、元素选择器或是类名选择器等。
selectorN：（可选择）为任意多个选择器，可以是ID选择器、元素选择器或是类名选择器等。
例如，要查询文档中的全部的＜span＞标记和使用CSS类myClass的＜div＞标记，可以使用下面的jQuery代码：
$("span,div.myClass");
【例19.4】在页面添加3种不同元素并统一设置样式。使用复合选择器筛选＜div＞元素和id属性值为span的元素，并为它们添加新的样式。
实例位置：光盘\MR\源码\第19章\19.4
Step 1　创建一个名称为index.html的文件，在该文件的＜head＞标记中应用下面的语句引入jQuery库。
＜script type="text/javascript" src="JS/jquery-1.6.1.min.js"＞＜/script＞
Step 2　在页面的＜body＞标记中，添加一个＜p＞标记、一个＜div＞标记、一个ID为span的＜span＞标记和一个按钮，并为除按钮以为外的3个标记指定CSS类名，代码如下：
＜p class="default"＞p元素＜/p＞
＜div class="default"＞div元素＜/div＞



＜span class="default" id="span"＞ID为span的元素＜/span＞
＜input type="button" value="为div元素和ID为span的元素换肤"/＞
Step 3　在引入jQuery库的代码下方编写jQuery代码，实现单击按钮来获取全部＜div＞元素，并修改它们的内容，具体代码如下：
＜script type="text/javascript"＞
$(document).ready(function(){
$("input[type=button]").click(function(){//绑定按钮的单击事件
$("div,#span").addClass("change");//添加所使用的CSS类
});
});
＜/script＞
运行本实例，将显示如图19.16所示的页面，单击“为div元素和ID为span的元素换肤”按钮，将为div元素和ID为span的元素换肤，如图19.17所示。




5.通配符选择器（*）
所谓的通配符，就是指符号“*”，它代表着页面上的每一个元素。也就是说，如果使用＄("*")，将取得页面上所有的DOM元素集合的jQuery包装集。通配符选择器比较好理解，这里就不再给予实例程序。
6.实战模拟：隐藏超链接地址
通常情况下，在网页中，如果将鼠标移动到一个超链接上，浏览器的地址栏中将显示该超链接所指向的链接地址。这在某种程序上，将威胁到网站的安全。为了网站的安全，可以将超链接的链接地址隐藏。下面将通过一个具体的例子来介绍如何应用jQuery实现隐藏超链接地址。
【例19.5】应用jQuery实现隐藏超链接地址。
实例位置：光盘\MR\源码\第19章\19.5
Step 1　创建一个名称为index.html的文件，在该文件中应用DIV+CSS样式进行页面布局，并添加4个超链接，关键代码如下：
＜div style="float:right;text-align:right;"＞
＜a href="index.html"＞首页＜/a＞
＆nbsp;|＆nbsp;＜a href="index.html" class="main"＞登录＜/a＞
＆nbsp;|＆nbsp;＜a href="index.html" class="main"＞注册＜/a＞
＆nbsp;|＆nbsp;＜a href="index.html" class="main"＞找回密码＜/a＞
＜/div＞
布局后的效果如图19.18所示。