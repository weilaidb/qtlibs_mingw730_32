19.6　jQuery的事件处理
人们常说“事件是脚本语言的灵魂”，事件使页面具有了动态性和响应性，如果没有事件，将很难完成页面与用户之间的交互。传统的JavaScript中内置了一些事件响应的方式，但是jQuery增强、优化并扩展了基本的事件处理机制。
19.6.1　页面加载响应事件
＄(document).ready()方法是事件模块中最重要的一个函数，它极大地提高了Web响应速度。＄(document)是获取整个文档对象，从这个方法的名称来理解，就是获取文档就绪的时候。该方法的书写格式为：
$(document).ready(function(){
//在这里写代码
});
可以简写成：
$().ready(function(){
//在这里写代码
});
当＄()不带参数时，默认的参数就是document，所以＄()是＄(document)的简写形式。
还可以进一步简写成：
$(function(){
//在这里写代码
});
虽然语法可以更短一些，但是不提倡使用简写的方式，因为较长的代码更具可读性，也可以防止与其他方法混淆。
通过上面的介绍我们可以看出，在jQuery中，可以使用＄(document).ready()方法代替传统的window.onload()方法，不过两者之间还是有些细微的区别的，主要表示在以下两方面。
（1）在一个页面上可以无限制地使用＄(document).ready()方法，各个方法间并不冲突，会按照在代码中的顺序依次执行。而一个页面中只能使用一个window.onload()方法。
（2）在一个文档完全下载到浏览器时（包括所有关联的文件，如图片、横幅等）就会响应window.onload()方法。而＄(document).ready()方法是在所有的DOM元素完全就绪以后就可以调用，不包括关联的文件。例如，在页面上还有图片没有加载完毕，但是DOM元素已经完全就绪，这样就会执行＄(document).ready()方法；在相同条件下，window.onload()方法是不会执行的，它会继续等待图片加



载，直到图片及其他关联文件都下载完毕时才执行。所以说，＄(document).ready()方法优于window.onload()方法。
19.6.2　jQuery中的事件
只有页面加载显然是不够的，程序在其他时候也需要完成某个任务。比如鼠标单击（onclick）事件，敲击键盘（onkeypress）事件以及失去焦点（onblur）事件等。在不同的浏览器中，事件名称是不同的，例如IE中的事件名称大部分都含有on，如onkeypress()事件，但是火狐浏览器中却没有这个事件名称。jQuery帮助我们统一了所有事件的名称。jQuery中的事件如表19.13所示。



这些都是对应的jQuery事件，和传统的JavaScript中的事件几乎相同，只是名称不同。这些方法中的fn参数，表示一个函数，事件处理程序就写在这个函数中。
19.6.3　事件绑定
在页面加载完毕时，程序可以通过为元素绑定事件完成相应的操作。在jQuery中，事件绑定通常可以分为为元素绑定事件、移除绑定事件和绑定一次性事件处理3种情况。下面分别进行介绍。
1.为元素绑定事件
在jQuery中，为元素绑定事件可以使用bind()方法。该方法的语法结构如下：
bind(type,[data],fn)
type：事件类型。
data：可选参数，作为event.data属性值传递给事件对象的额外数据对象。大多数的情况下不使用该参数。
fn：绑定的事件处理程序。
例如，为普通按钮绑定一个单击事件，用于在单击该按钮时，弹出提示对话框，可以使用下面的代码：
$("input:button").bind("click",function(){alert('您单击了按钮');});
2.移除绑定事件
在jQuery中，为元素移除绑定事件可以使用unbind()方法。该方法的语法结构如下：
unbind([type],[data])
type：可选参数，用于指定事件类型。
data：可选参数，用于指定要从每个匹配元素的事件中反绑定的事件处理函数。






说明　在unbind()方法中，两个参数都是可选的。如果不填参数，将会删除匹配元素上所有绑定的事件。
例如，要移除为普通按钮绑定的单击事件，可以使用下面的代码：
$("input:button").unbind("click");
3.绑定一次性事件处理
在jQuery中，为元素绑定一次性事件处理可以使用one()方法。该方法的语法结构如下：
one(type,[data],fn)
type：用于指定事件类型。
data：可选参数，作为event.data属性值传递给事件对象的额外数据对象。
fn：绑定到每个匹配元素的事件上面的处理函数。
例如，要实现只有当用户第一次单击匹配的div元素时，弹出提示对话框显示div元素的内容，可以使用下面的代码：
$("div").one("click",function(){
alert($(this).text());//在弹出的提示对话框中显示div元素的内容
});
19.6.4　模拟用户操作
jQuery中提供了模拟用户的操作触发事件、模仿悬停事件和模拟鼠标连续单击事件等3种模拟用户操作的方法。下面分别进行介绍。
1.模拟用户的操作触发事件
在jQuery中，常用triggerHandler()方法和trigger()方法来模拟用户的操作触发事件。这两个方法的语法格式完成相同，所不同的是，triggerHandler()方法不会导致浏览器同名的默认行为被执行，而trigger()方法会导致浏览器同名的默认行为被执行，例如，使用trigger()触发一个名称为submit的事件，同样会导致浏览器执行提交表单的操作。要阻止浏览器的默认行为，只需返回false。另外，使用trigger()方法和triggerHandler()方法还可以触发bind()绑定的自定义事件，并且可以为事件传递参数。
【例19.17】在页面载入完成就执行按钮的click事件，但是并不需要用户自己操作。
实例位置：光盘\MR\源码\第19章\19.17
＜script type="text/javascript" src="JS/jquery-1.6.1.min.js"＞＜/script＞
＜script type="text/javascript"＞
$(document).ready(function(){
$("input:button").bind("click",function(event,msg1,msg2){
alert(msg1+msg2);//弹出提示对话框
}).trigger("click",["欢迎访问","明日科技"]);//页面加载时触发单击事件
});