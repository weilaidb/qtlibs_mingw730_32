Lisp教程


Lisp是Fortran语言之后第二古老的高级编程语言，自成立之初已发生了很大变化，和一些方言一直存在在它的历史。今天，最广为人知的通用的是Lisp方言：Common Lisp和Scheme。


	Lisp由约翰·麦卡锡在1958年发明，在麻省理工学院（MIT）。


	该参考将带您通过简单实用的方法，同时学习Lisp程序设计语言。

Lisp是一门历史悠久的语言，全名叫LISt Processor，也就是“表处理语言”，它是由John  McCarthy于1958年就开始设计的一门语言。和Lisp同时期甚至更晚出现的许多语言如Algo等如今大 多已经消亡，又或者仅仅在一些特定的场合有一些微不足道的用途，到现在还广为人知的恐怕只剩下了 Fortran和COBOL。但唯独Lisp，不但没有随着时间而衰退，反倒是一次又一次的焕发出了青春，从Lisp分支出来的Scheme、ML等语言在很多场合的火爆程度甚至超过了许多老牌明星。那么这颗常青树 永葆青春的奥秘究竟在哪里呢？

如果你只接触过C/C++、Pascal这些“过程式语言”的话，Lisp可能会让你觉得十分不同寻常，首先吸引你眼球（或者说让你觉得混乱的）一定是Lisp程序中异常多的括号，当然从现在的角度来讲，这种设计的确对程序员不大友好，不过考虑到五六十年代的计算机处理能力，简化语言本身的设计在那时算得上是当务之急了。


	
		约翰·麦卡锡发明LISP于1958年，FORTRAN语言的发展后不久。首次由史蒂夫·拉塞尔实施在IBM704计算机上。
	
	
		它特别适合用于人工智能方案，因为它有效地处理的符号信息。
	
	
		Common Lisp的起源，20世纪80年代和90年代，分别接班人Maclisp像ZetaLisp和NIL(Lisp语言的新实施)等开发。
	
	
		它作为一种通用语言，它可以很容易地扩展为具体实施。
	
	
		编写Common Lisp程序不依赖于机器的具体特点，如字长等。
	
	
		Common Lisp的特点
	
	
		
			
				这是机器无关
			
		
		
			
				它采用迭代设计方法，且易于扩展。
			
		
		
			
				它允许动态更新的程序。
			
		
		
			
				它提供了高层次的调试。
			
		
		
			
				它提供了先进的面向对象编程。
			
		
		
			
				它提供了方便的宏系统。
			
		
		
			
				它提供了对象，结构，列表，向量，可调数组，哈希表和符号广泛的数据类型。
			
		
		
			
				它是以表达为主。
			
		
		
			
				它提供了一个面向对象的系统条件。
			
		
		
			
				它提供完整的I/ O库。
			
		
		
			
				它提供了广泛的控制结构。
			
		
	
	
		LISP的内置应用程序
	
	
		大量成功的应用建立在Lisp语言。
	
	
		
			
				Emacs
			
		
		
			
				G2
			
		
		
			
				AutoCad
			
		
		
			
				Igor Engraver
			
		
		
			
				Yahoo Store
			
		
	


	


	

						
						
						
							
								
							
						

						
								
								
						

						
							易百教程移动端：请扫描本页面底部(右侧)二维码并关注微信公众号，回复："教程" 选择相关教程阅读或直接访问：http://m.yiibai.com 。
						

						

							//更多请阅读：https://www.yiibai.com/lisp/

