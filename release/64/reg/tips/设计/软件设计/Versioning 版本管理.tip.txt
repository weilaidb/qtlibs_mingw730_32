版本管理
1.MAJOR
2.MINOR
3.MICRO


MAJOR 后向不兼容版本变更，如 删除公共API、重新定义结构体成员
MINOR 后向兼容版本，如添加公共接口、增加新的解释器
MICRO 小变更，如在未定义的场景下改变行为。



The major version number is incremented with backward incompatible changes - e.g. removing parts of the public API, reordering public struct members, etc. 


The minor version number is incremented for backward compatible API changes or major new features - e.g. adding a new public function or a new decoder. 


The micro version number is incremented for smaller changes that a calling program might still want to check for - e.g. changing behavior in a previously unspecified situation.










