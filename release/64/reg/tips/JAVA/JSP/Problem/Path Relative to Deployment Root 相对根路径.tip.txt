博客园Logo
首页
新闻
博问
专区
闪存
班级
代码改变世界
搜索
注册
登录
返回主页
Stronger
I will try to be what I want to be！
博客园首页新随笔联系订阅管理随笔 - 34  文章 - 1  评论 - 3  阅读 - 9988
IDEA项目路径初探
IDEA项目路径
普通Java项目
普通Java项目，标准目录结构src下的路径就是classpath类路径，每次编译都会将src目录下新增的类和资源文件打包进类路径。

如下图，类文件和配置文件都会被编译打包进类路径

在这里插入图片描述

maven构建Java项目
maven标准目录结构：

src
  -main
      –bin 脚本库
      –java java源代码文件
      –resources 资源库，会自动复制到classes目录里
      –filters 资源过滤文件
      –assembly 组件的描述配置（如何打包）
      –config 配置文件
      –webapp web应用的目录。WEB-INF、css、js等
  -test
      –java 单元测试java源代码文件
      –resources 测试需要用的资源库
      –filters 测试资源过滤库
  -site Site（一些文档）
target
LICENSE.txt Project’s license
README.txt Project’s readme
工程根目录下就只有src和target两个目录，target是有存放项目构建后的文件和目录，jar包、war包、编译的class文件等。target里的所有内容都是maven构建的时候生成的。

以上摘自：MAVEN项目标准目录结构

在IDEA中快速创建一个普通maven项目，选择maven-archtype-quickstart一项，就可以创建一个maven管理的Java项目。

在这里插入图片描述

可以看到，一个最基本的maven项目有src目录，并且该目录下存在main和test两个目录。

简单介绍：

src/man/java：存放类源代码，其编译输出到target-classes路径下。

src/test/java：存放测试代码，其编译输出到target-test-classes路径下。

如果我新增一个配置文件在java下，按常理来说源代码（java目录下的文件）路径下的文件都会被打包到类路径下，但是对于maven来说，默认情况下，maven只会按照标准的目录结构查找和处理文件，对于其他文件不予处理。

如下示例：jdbc.properties没有被maven处理

在这里插入图片描述

但是如果想要它被编译输出到classpath下，也不是不可以。

解决方案

1、项目中新建一个resources目录，在IDEA中必须将其标记为Resources，resources是maven项目下的一个标准目录结构，maven对于resources下的文件就会将其打包到类路径下。IDEA中，如果新建的resources目录并没有将其标记为Resources，尽管同名，但是maven还是依旧不会处理。

2、使用maven-resources-plugin插件。

示例一：正常处理

在这里插入图片描述

编译测试，结果如下

在这里插入图片描述

注：maven仅仅是将resources目录下的文件打包输出到target-classes路径下，不是将resources目录打包到target-classes。

示例二：违反maven目录结构约束

修改pom文件，build标签下添加resources设置

<resources>
  <resource>
    <!--从此目录下读取全部以.properties和.xml开头的文件-->
    <directory>src/main/java/</directory>
    <includes>
      <include>**/*.properties</include>
      <include>**/*.xml</include>
    </includes>
  </resource>
</resources>
感兴趣的伙伴可以尝试一下。这种方式你说它不合常规，其实也不这么绝对，框架采用这种方式居多。比如SSM，如果将Mybatis下的mapper统一和类放在一起，而不是放在resources目录下（hibernat就是这样做的），采用上述设置，maven可以将类连通相邻的配置文件一起打包进类路径。

普通web项目
tomcat下标准的web目录结构形式：

在这里插入图片描述

JavaWebAppweb应用上下文，根目录，根目录下存放的一般是静态资源文件，WEB-INF目录，正常开发来说它标准的子目录结构就是这两个classes：类路径，存放java字节码文件、lib：存放项目所引用到的第三方jar库。并且WEB-INF目录下的文件对外都是不可访问的，只能通过内部进行处理，有时我们也会把一些不想让客户直接访问到的静态资源放入到这个目录下。

在IDEA中，web的项目结构如下，可以看到普通的web项目默认编译输出路径和普通的Java项目编译输出路径其实是相同的，都是将编译后的字节码放到了项目根目录下的名为out/production目录下，这些默认配置做的都挺好的，能够及时看到编译后的结果。同样我们也可以更改这些默认输出路径，后面会有演示。

在这里插入图片描述

普通的servlet会用到tomcat几个jar，可以在Dependencies选项卡中将tomcat的运行时的类库导入

在这里插入图片描述

这里scope选项为provided的含义就是该包只在编译期起作用，不会被打包进war，jar包由tomcat提供。

我们对项目进行部署，查看编译之后的目录结构是怎么样的

在这里插入图片描述

以上几个箭头和方框仅仅演示了java文件编译打包到WEB-IFN/classes文件的过程（在没有更改编译输出和Artifacts面板中的Output directory路径的前提下）。

之前保留了一张Eclipse下web项目完整的映射图

在这里插入图片描述

总结

1、web项目下的源码文件编译后最终会放入WEB-INF/classes目录下

2、web、webapps、webcontent、webroot分别是IDEA和eclipse中对web项目根目录名称不同的叫法，本质上都是web项目根目录，对于Eclipse来说，部署的时候都是将其下的所有文件部署到webapps目录下的，对于IDEA，是通过创建tomcat实例，将某个url映射到具体的磁盘路径上实现项目的发布。

web、webapps、webcontent、webroot目录就是web应用的根目录，我们发布项目，挑明了就是将根目下的文件打包发布，那些配置文件之类的去哪了？看前面的编译流程，所有的配置文件都会被打包进类路径，为类所用，所以说配置文件最终也会汇聚到web应用根目录里面去。

网上对于新建一个web工程有很多介绍，在新建web的过程中，有的会特意的去web下新建classes、lib目录，并且修改项目编译输出目录？为什么？不这样做有影响吗？

为什么要新建一个classes还要更改其编译输出目录？

即如图操作：

在这里插入图片描述

一个标准的web目录结构请看上图，这样做的原因就是使其目录结构更加规范（站在人的视角），但是新建一个classes目录还没有完，因为idea是不承认WEB-INF/classes该路径是编译输出路径的，必须将上图横线部分选中然后浏览到具体的目录才可以，之后idea不会在项目根目录下新建一个out/production目录，而是直接将WEB-INF/classes作为编译输出。像刚开始没有新建classes目录，web项目也能正常部署，并且应用根目录下也存在WEB-INF/classes这个目录，其实是强大的编译器帮我们做了。

maven构建web项目
idea文件图标介绍
下面以一个maven管理下的标准web项目作为示例：

在这里插入图片描述

maven管理下，java和resources目录下的文件都会被打包编译到target-classes，也就是我们常说的类路径。

对于小蓝点表示的文件夹则不属于maven管理，小蓝点表示的文件夹代表web资源所在目录，外部所访问到的也就是该目录下的文件。

这里主要介绍web资源目录即小蓝点所在的目录如何去设置，它和同级别的resources目录有什么不同？

对于一个普通的web项目，默认情况下，小蓝点自动标识到了web目录上，如果将其取消会怎么样？

这里伙伴们可以尝试一下，新建一个普通的web项目，将其小圆点取消掉，具体的做法如下图

在这里插入图片描述

取消掉之后，小蓝点消失，index.jsp也没有被发布到webapp目录下，说明Web Reources Directory设置的目录下的文件都会被打包进根目录（webapp）下，否则即使web目录下存在许多静态资源文件，由于不会被idea打包进去，最终访问结果404。

在这里插入图片描述

这里还有一个选项是Path Relative to Deployment Root，这一个路径规定了让idea在打包的时候是相对于哪个路径打包，默认是相对于根路径，如果我设置为/jsp，那么index.jsp在被打包的时候，就会相对于web根目录下的/jsp目录，将index.jsp文件打入它的目录下，如果该目录不存在，idea会自动创建。

Web Reources Directory的正确配置，可以让idea自动地将目录下的资源文件成功地发布到webapp目录下，以便能够被外部访问。默认情况下，idea自动将web根目录即应用部署下的目录设置为资源路径，其实我们还可以新增其他的资源路径，将其他路径下的文件发布到webapp目录，如下

在这里插入图片描述

在webmvc项目根目录下，新增了一个不合常规的目录resources并且将其设置为web资源目录（小蓝点），将其打包到web根下的res目录

编译输出的目录结构如下：

在这里插入图片描述

web资源路径的设置可以在modules或者facets下的web模块设置：

在这里插入图片描述

总结：

1）普通的Java项目web项目src路径下的java文件和配置文件都会被打包到类路径下。

2）maven管理的Java项目和web项目，resources目录和java目录都会被编译到类路径下，对于web来说还会有进一步转化，类路径下的文件最终都会存放在web应用根目录下的WEB-INF/classes目录下。

3）idea默认将web应用根目录作为资源目录，其下的文件和文件夹都会打包到根目录，并部署到tomcat。

4）若webapp目录下存在resources目录，它和maven下的resources目录是不同的，webapp下的resources目录默认打包到根目录下，maven下的resources目录下的文件打包到类路径下。

思考：对于SpringBoot项目，如果想让webapp目录下的文件，能够被外部访问到，如何去做？

分类: Program Tools
标签: idea项目结构, 类路径, idea默认编译项目路径, maven
好文要顶 关注我 收藏该文  
Wonkey
粉丝 - 1 关注 - 5
+加关注
30
« 上一篇： VMWare网络模式(Centos7)
» 下一篇： 数据库原理与技术
posted @ 2020-10-16 18:58  Wonkey  阅读(3171)  评论(0)  编辑  收藏  举报
刷新评论刷新页面返回顶部
登录后才能查看或发表评论，立即 登录 或者 逛逛 博客园首页
【推荐】腾讯云多款云产品1折起，买云服务器送免费机器

编辑推荐：
· 前端构建效率优化之路
· .NET性能优化-使用SourceGenerator-Logger记录日志
· 记一次 Linux server 偶发 CPU 飙升问题的跟进与解决
· 记一次 .NET 某智慧物流 WCS 系统 CPU 爆高分析
· 如何创建一个带诊断工具的 .NET 镜像
最新新闻：
· 3D石墨烯泡沫制成先进压力传感器
· 这个开挂都没法被封号的人，反手还能把别人的号封了。
· 盘活充电桩的闲钱：“私桩共享”能否解开新能源汽车充电难题？
· 交出“灾难性”财报后，英特尔要靠晶圆代工扳回一城？
· 腾讯电竞的蓝翔梦
» 更多新闻...
公告
昵称： Wonkey
园龄： 2年3个月
粉丝： 1
关注： 5
+加关注
<	2022年8月	>
日	一	二	三	四	五	六
31	1	2	3	4	5	6
7	8	9	10	11	12	13
14	15	16	17	18	19	20
21	22	23	24	25	26	27
28	29	30	31	1	2	3
4	5	6	7	8	9	10
搜索
 
 
常用链接
我的随笔
我的评论
我的参与
最新评论
我的标签
我的标签
MySQL(21)
Java(6)
数据结构(2)
红黑树(2)
spring(2)
javaweb(1)
数据库原理(1)
idea项目结构(1)
maven(1)
idea默认编译项目路径(1)
更多
随笔分类
Data Structure(2)
database(20)
Java(7)
Java框架(2)
Linux(1)
Program Tools(1)
随笔档案
2020年10月(8)
2020年9月(17)
2020年8月(8)
2020年7月(1)
文章分类
web(1)
阅读排行榜
1. IDEA项目路径初探(3171)
2. MySQL乱码问题(为什么？追根溯源)(541)
3. Spring容器和Web容器相关知识(478)
4. 10. 索引的设计和使用(456)
5. 红黑树-结点的删除（C语言实现）(437)
评论排行榜
1. 红黑树-结点的删除（C语言实现）(3)
推荐排行榜
1. IDEA项目路径初探(3)
2. volatile域浅析(1)
3. Spring容器和Web容器相关知识(1)
4. MySQL乱码问题(为什么？追根溯源)(1)
最新评论
1. Re:红黑树-结点的删除（C语言实现）
@你又算哪一个bug 可以...
--Wonkey
2. Re:红黑树-结点的删除（C语言实现）
通过博主的博客自己也实现了红黑树的删除 谢谢大佬！打算写一篇博客，里面想贴大佬的链接

--你又算哪一个bug
3. Re:红黑树-结点的删除（C语言实现）
牛

--你又算哪一个bug
Copyright © 2022 Wonkey
Powered by .NET 6 on Kubernetes