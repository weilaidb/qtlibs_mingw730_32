2.3 使用Ant构建项目
Ant 早已成为 Java 项目构建工具事实上的标准。Ant 通过一个 XML 格式的项目配置
文件（通常是 build.xml）来构建项目，从而可以实现从编译到部署的全自动化的项目构
建。一个项目构建任务由若干 Task 构成，每个 Task 可以指定其依赖的 Task，Ant 会按
照依赖关系自动执行必要的 Task。
一个项目的构建过程一般可按照以下顺序进行。
① 定义各目录变量。
② 定义 Classpath 和外部任务。
③ 初始化目录。
④ 执行 javac 编译。
⑤ 生成各类配置文件（如 Spring 配置文件）。
⑥ 运行 JUnit 测试。
⑦ 生成项目部署文件。
对于上面的“Hello，World”示例，编写如下的 build.xml 并放到项目根目录下。
<?xml version="1.0" encoding="UTF-8"?> 
<project name="HelloWorld" default="compile" basedir="."> 
 <!-- 定义目录变量 --> 
 <property name="src.dir" value="src"/> 
 <property name="lib.dir" value="lib"/> 
 <property name="build.dir" value="bin"/>


<!-- 定义 Classpath --> 
 <path id="master-classpath"> 
 <fileset dir="${lib.dir}"> 
 <include name="**/*.jar"/> 
 </fileset> 
 <pathelement path="${build.dir}"/> 
 </path> 
 <!-- 初始化${build.dir}目录 --> 
 <target name="init"> 
 <mkdir dir="${build.dir}"/> 
 </target> 
 <!-- 编译 java 源代码 --> 
 <target name="compile" depends="init"> 
 <mkdir dir="${build.dir}" /> 
 <javac destdir="${build.dir}"> 
 <classpath refid="master-classpath"/> 
 <src path="${src.dir}"/> 
 </javac> 
 <!-- 复制 beans.xml --> 
 <copy todir="${build.dir}"> 
 <fileset file="${src.dir}/beans.xml"/> 
 </copy> 
 </target> 
</project> 
Ant 可以通过<property>定义任意的变量，通常应当把多次出现的目录名、文件名定
义为变量，在更改目录名或文件名时，只需更新变量值即可。变量名也应该有明确的意
义，可以在任何地方通过${变量名}引用变量。
<property name="src.dir" value="src"/> 
为了构建项目，通常我们将一个构建任务分拆为几个子任务，通过<target>定义。
target 必须指定一个 name，还可以指定 depends，表示这个 target 必须依赖于其他的某些
target。例如，名称为“compile”的 target 依赖于名称为“init”的 target。
<target name="compile" depends="init"> 
在执行 compile 之前，Ant 会自动首先执行 init。因此，只要正确指定了各个 target
之间的依赖关系，然后在根元素<project>中指定默认的 target，Ant 就会以正确的顺序执
行必须的 target。target 的定义顺序对 Ant 没有影响。





Eclipse 默认使用内置的 Java 编译器。为了能使用 Ant 构建项目，需要打开菜单
“Project”→“Properties”，选择“Builders”，新建一个 Ant Build，如图 2-18 所示。
图 2-18 
然后，指定 build.xml 的位置和项目的根目录，如图 2-19 所示。
图 2-19 
然后，在“Builder”对话框中，选中“Hello_Ant_Builder”复选框，同时取消选择
“Java Builder”复选框，如图 2-20 所示。



忽略警告信息，单击“OK”按钮保存设置。现在，选择菜单“Project”→“Build Project”，
Eclipse 将使用 Ant 来构建项目，如图 2-21 所示。
图 2-21 
如果构建成功，Ant 会显示“BUILD SUCCESSFUL”字样。
要脱离 IDE 以独立的 Ant 来构建此项目，需要首先下载完整的 Ant 包。可以从
http://ant.apache.org/bindownload.cgi 下载。截至本书写作时，最新的稳定版本是 1.6.5。
解压到本地目录，然后设置环境变量 ANT_HOME=<Ant 安装目录>，并将%ANT_ 
HOME%\bin 添加到 Path 中。
在命令提示符下，切换到项目所在的根目录。由于我们使用了标准的项目配置文件
build.xml，因此只需简单地键入 ant，如图 2-22 所示。
图 2-22 
如果没有使用标准的 build.xml 作为文件名，需要在命令行指定 XML 文件。
ant -buildfile mybuild.xml 
读者可能会觉得使用 Ant 构建项目较为烦琐。对于小项目而言，编写 Ant 所需的
build.xml 显得工作量较多，然而随着项目规模越来越大，使用 Ant 构建将大大简化编译、
测试、部署和生成 API 文档等一系列工作，并且能够全自动进行，是 Java 项目不可或缺
的工具。作为示例，本书的 Live 在线书店示例也使用 Ant 构建。
