/***************************************************************************
 ** 版权所有:  WeiLai Copyright (c) 2020-2030
 ** 文件名称:  mutex.h

 ** 当前版本:  v1.0
 ** 作    者:
 ** 完成日期: 2022-08-29
 ** 修改记录:
 ** 修改日期:
 ** 版本号  :
 ** 修改人  :
 ** 修改内容:
 ***************************************************************************/
#ifndef MUTEX_H
#define MUTEX_H
/*****************************头文件****************************************/

/*****************************宏定义****************************************/


#ifdef _WIN32
#include <windows.h>
// conflict with our own ERROR...
#undef ERROR

typedef CRITICAL_SECTION rlog_mutex_t;
#define rlog_mutex_init InitializeCriticalSection
#define rlog_mutex_destroy DeleteCriticalSection
#define rlog_mutex_lock EnterCriticalSection
#define rlog_mutex_unlock LeaveCriticalSection
#else
#include <pthread.h>

typedef pthread_mutex_t rlog_mutex_t;
#define rlog_mutex_init(m) pthread_mutex_init((m), 0)
#define rlog_mutex_destroy pthread_mutex_destroy
#define rlog_mutex_lock pthread_mutex_lock
#define rlog_mutex_unlock pthread_mutex_unlock
#endif

/*****************************结构体或类型定义*******************************/


/*****************************全局变量****************************************/


/*****************************本地变量****************************************/


/*****************************函数或类声明****************************************/


/*****************************函数或类实现****************************************/
/*! @class Mutex
  @brief Class encapsulating a critical section under Win32 or a mutex
  under Unix.

  This class should never be used standalone but always passed to Lock,
  see the example there.
  */
class Mutex
{
    public:
        Mutex() { rlog_mutex_init(&m_mutex); }
        ~Mutex() { rlog_mutex_destroy(&m_mutex); }

        void Lock() { rlog_mutex_lock(&m_mutex); }
        void Unlock() { rlog_mutex_unlock(&m_mutex); }

    private:
        rlog_mutex_t m_mutex;

        Mutex( const Mutex & );
        Mutex & operator = ( const Mutex & );
};






/*****************************by extern "C"****************************************/

#ifdef __cplusplus
extern "C" {
#endif
    /*****************************头文件****************************************/


    /*****************************宏定义****************************************/


    /*****************************结构体或类型定义*******************************/


    /*****************************全局变量****************************************/


    /*****************************本地变量****************************************/


    /*****************************函数或类声明****************************************/


    /*****************************函数或类实现****************************************/


#ifdef __cplusplus
}
#endif





#endif /* MUTEX_H */