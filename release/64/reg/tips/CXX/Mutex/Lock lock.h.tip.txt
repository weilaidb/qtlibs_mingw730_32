/***************************************************************************
** 版权所有:  WeiLai Copyright (c) 2020-2030
** 文件名称:  lock.h
    
** 当前版本:  v1.0
** 作    者:
** 完成日期: 2022-08-29
** 修改记录:
** 修改日期:
** 版本号  :
** 修改人  :
** 修改内容:
***************************************************************************/
#ifndef LOCK_H
#define LOCK_H
/*****************************头文件****************************************/
#include "mutex.h"

/*****************************宏定义****************************************/

/*****************************结构体或类型定义*******************************/


/*****************************全局变量****************************************/


/*****************************本地变量****************************************/


/*****************************函数或类声明****************************************/


/*****************************函数或类实现****************************************/


/*! @class Lock

Simple helper class or doing locking, so we can be sure the lock is
released when our scope ends for whatever reason..

Usage
@code
func()
{
    // mutex released when lock goes out of scope
    Lock lock( &mutex );

    ...
}
@endcode

@internal
*/
class  Lock
{
public:
Lock( Mutex * mutex )
    : _mutex( mutex )
{
    _mutex->Lock();
}

~Lock()
{
    _mutex->Unlock();
    _mutex = 0;
}

Mutex *_mutex;
};






/*****************************by extern "C"****************************************/

#ifdef __cplusplus
extern "C" {
#endif
/*****************************头文件****************************************/


/*****************************宏定义****************************************/


/*****************************结构体或类型定义*******************************/


/*****************************全局变量****************************************/


/*****************************本地变量****************************************/


/*****************************函数或类声明****************************************/


/*****************************函数或类实现****************************************/


#ifdef __cplusplus
}
#endif





#endif /* LOCK_H */
