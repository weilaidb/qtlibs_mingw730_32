#ifndef PUB_UNUSED$NL#define PUB_UNUSED(object) (void) object$NL#endif$NL$NL#ifndef ARRAYSIZE$NL#define ARRAYSIZE(A) ((unsigned int)(sizeof(A)/sizeof(A[0])))$NL#endif$NL$NL//\1 ID定义$NLenum{$NL    ID_$UP(\1)_INVALID,$NL    ID_\2,$NL    //TODO$NL$NL};$NL$NL$NL//函数指针$NLtypedef unsigned int (*pFn\1)(void *pMsg, unsigned int dwLen);$NL$NLtypedef struct \1Set{$NL    unsigned int m_id;$NL    pFn\1 m_handler\1;$NL    //TODO$NL}T_\1Set,*P_\1Set;$NL$NL$NL$NL//函数声明，在g_$LO(\1)Set之前声明$NLunsigned int proc\1Entry(unsigned int dwId,void *pMsg, unsigned int dwLen);$NLunsigned int \3(void *pMsg, unsigned int dwLen);$NL//TODO$NL$NL$NLstatic \1Set g_$LO(\1)Set[] = {$NL    {ID_\2,\3},$NL    //TODO$NL    {0, NULL},$NL};$NL$NL$NL$NL//处理\1入口$NLunsigned int proc\1Entry(unsigned int dwId,void *pMsg, unsigned int dwLen)$NL{$NL    unsigned int dwLp =  0;$NL    P_\1Set pSet = NULL;$NL    $NL    for(dwLp = 0;dwLp < ARRAYSIZE(g_$LO(\1)Set);dwLp++)$NL    {$NL        //printf("No:%-03u -- %-03u\n", dwLp+1, g_$LO(\1)Set[dwLp]);$NL        pSet = &g_$LO(\1)Set[dwLp];$NL        if(pSet && (pSet->m_id == dwId))$NL        {$NL            if(pSet->m_handler\1)$NL            {$NL                return pSet->m_handler\1(pMsg,dwLen);$NL            }$NL        }$NL    }$NL$NL    printf("no found handler for id:%u\n", dwId);$NL    $NL    return 0;$NL}$NL$NL$NLunsigned int \3(void *pMsg, unsigned int dwLen)$NL{$NL    //TODO$NL    PUB_UNUSED(pMsg);$NL    PUB_UNUSED(dwLen);$NL    $NL    return 0;$NL}$NL