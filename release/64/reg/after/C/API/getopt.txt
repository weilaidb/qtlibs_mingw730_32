int \1;$NLint \2 = 0;$NL$NLwhile ((\1 = getopt(\3, \4, "\5")) != EOF) {$NL    switch (\1) {$NL$NL    case 'f':$NL      fflag++;$NL      patfile = optarg;$NL      continue;$NL    case 'b':$NL    case 'v':$NL      egrepold++; /* tbd boyer-moore of little help here */$NL      continue;$NL    case '\1':$NL      cflag++;$NL      continue;$NL    case 'e':$NL      eflag++;$NL      pattern = optarg;$NL      continue;$NL    case 'h':$NL      hflag++;$NL      continue;$NL    case '1': /* Stop at very first match */$NL      firstflag++;  /* spead freaks only */$NL      continue;$NL    case 'i':$NL      iflag++;$NL      continue;$NL    case 'l':$NL      lflag++;$NL      continue;$NL    case 'n':$NL      nflag++;$NL      continue;$NL    case 's':$NL      sflag++;$NL      continue;$NL    case 'w':$NL    case 'y':$NL      if (!grepflag)$NL        \2++;$NL      grepold++;$NL      continue;$NL    case 'x': /* needs more work, like -b above */$NL      if (!fgrepflag)$NL        \2++;$NL      fgrepold++;$NL      continue;$NL    case '?':$NL      \2++;$NL    }$NL}$NL$NLif (\2 || ((\3 <= optind) && !fflag && !eflag)) {$NL    if (grepflag)$NL        oops("usage: grep [-bcihlnsvwy] [-e] pattern [file ...]");$NL    else if (fgrepflag)$NL        oops("usage: fgrep [-bcilnv] {-f patfile | [-e] strings} [file ...]");$NL    else    /* encourage SVID options, though we provide$NL         * others */$NL        oops("usage: egrep [-bcilnv] {-f patfile | [-e] pattern} [file ...]");$NL}$NL  $NL  