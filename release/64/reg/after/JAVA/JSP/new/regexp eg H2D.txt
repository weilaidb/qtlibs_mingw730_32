//处理扩展特别字符串，比如$\1 等$NLpublic static String procSpecialSignReplace\1(String str)$NL{$NL$TBSystem.out.println("===>procSpecialSignReplace\1");$NL//$TB$TBSystem.out.println("str: " + str);$NL$NL$TBList<String> sepList = CStringPub.string2ListEnter(str);$NL$TBList<String> resultList = CStringPub.emptyStringList();$NL$NL$TBList<String> formatTables  = new ArrayList<String>();$NL$TB//$\1$NL$TBformatTables.add("\\$\1" + leftSign() + "([^>>>]*)" + rightSign());$NL$TBfor (String item :$NL$TB$TB$TBformatTables) {$NL$TB$TBString pattern = item;$NL$TB$TBint reFlags = 0;$NL$TB$TBreFlags |= Pattern.DOTALL;$NL$NL//$TB$TB$TBSystem.out.println("pattern: " + pattern);$NL//$TB$TB$TBSystem.out.println("pattern.length():" + pattern.length());$NL$NL$TB$TBString newLine = "";$NL$TB$TB//字符串形成的列表循环$NL$TB$TBfor (String line :$NL$TB$TB$TB$TBsepList) {$NL$TB$TB$TBtry{$NL$TB$TB$TB$TBnewLine = line;$NL$TB$TB$TB$TBPattern r = Pattern.compile(pattern, reFlags);$NL$TB$TB$TB$TB// 现在创建 matcher 对象$NL$TB$TB$TB$TBMatcher m = r.matcher(line);$NL$TB$TB$TB$TBboolean findFlag = false;$NL$TB$TB$TB$TB//m.find()或m.matches()只能调用一次，再次调用就可能为false了。$NL$TB$TB$TB$TBwhile (m.find()) {$NL$TB$TB$TB$TB$TBfindFlag = true;$NL$TB$TB$TB$TB$TBSystem.out.println("seq:" + m.group());$NL$TB$TB$TB$TB$TBfor (int i = 0; i < m.groupCount(); i++) {$NL$TB$TB$TB$TB$TB$TBSystem.out.println("Found value[" + i + "]: " + m.group(i));$NL$TB$TB$TB$TB$TB$TBString Org\1Text = m.group(i);$NL$TB$TB$TB$TB$TB$TBString \1Text = Org\1Text.replace("$\1", "")$NL$TB$TB$TB$TB$TB$TB$TB$TB.replace(leftSign(),"")$NL$TB$TB$TB$TB$TB$TB$TB$TB.replace(rightSign(),"");$NL$TB$TB$TB$TB$TB$TBInteger DecNum = Integer.parseInt(\1Text,16);$NL$TB$TB$TB$TB$TB$TBString DecNumText = Integer.toString(DecNum);$NL$TB$TB$TB$TB$TB$TBnewLine = newLine.replace(Org\1Text, DecNumText);$NL$TB$TB$TB$TB$TB}$NL$TB$TB$TB$TB}$NL$NL$TB$TB$TB$TBif(findFlag == false)$NL$TB$TB$TB$TB{$NL$TB$TB$TB$TB$TBresultList.add(line);$NL$TB$TB$TB$TB}$NL$TB$TB$TB$TBelse$NL$TB$TB$TB$TB{$NL$TB$TB$TB$TB$TBresultList.add(newLine);$NL$TB$TB$TB$TB}$NL$NL$TB$TB$TB} catch (Exception e) {$NL$TB$TB$TB$TBe.printStackTrace();$NL$TB$TB$TB}$NL$TB$TB}$NL$TB}$NL$NL$TBreturn CStringPub.list2StringEnter(resultList);$NL}$NL$NL$NL$NL=======================================>>>>>>>>>>>$NL