#ifndef $UP<<<\6>>>_H$NL#define $UP<<<\6>>>_H$NL$NL#include <iostream>$NL#include <map>$NL#include <string>$NLusing namespace std;$NL$NLclass \6;$NLtypedef \1<\2 , \3> \4;$NLtypedef \1<\2 , \3>::iterator \4_ITER;$NLtypedef \1<\2 , \3>::reverse_iterator \4_RITER;$NL$NL$NLclass \6$NL{$NLpublic:$NL$TBstring name;$NL$TBint age;$NL$NL$TB\6(string n, int a)$NL$TB{$NL$TB$TBname = n;$NL$TB$TBage = a;$NL$TB}$NL$NL$TBbool operator<(const \6 &p) const //注意这里的两个const$NL$TB{$NL$TB$TBreturn (age < p.age) || (age == p.age && name.length() < p.name.length()) ;$NL$TB}$NL$NL$NLpublic:$NL$TBstatic void printMap();$NL$TBstatic void printRMap();$NL$TBstatic void insertMap(\2  iKey,  \3 Val);$NL$TBstatic bool findMap(\2  iKey);$NL$TBstatic void clearMap();$NL$TBstatic bool eraseMap(\2  iKey);$NL$NLprivate:$NL$TBstatic \4 \5;$NL};$NL$NL$NL#endif // $UP<<<\6>>>_H$NL$NL$NL$NL#include "$LO<<<\6>>>.h"$NL$NL\4 \6::\5;$NL$NL$NLvoid \6::printMap()$NL{$NL$TB\4_ITER it;$NL$TB\4_ITER itEnd;$NL$TBit = \5.begin();$NL$TBitEnd = \5.end();$NL$NL$TBcout << "map size:" << \5.size() << endl;$NL$TBwhile (it != itEnd) {$NL//$TB$TBcout<<it->first.name  <<' '<<it->second<<endl;$NL$TB$TBit++;$NL$TB}$NL}$NL$NLvoid \6::printRMap()$NL{$NL$TB\4_RITER riter;$NL$TBcout << "map size:" << \5.size() << endl;$NL$TBfor(riter = \5.rbegin(); riter != \5.rend(); riter++)$NL$TB{$NL//$TB$TBcout<<riter->first<<"  "<<riter->second<<endl;$NL$TB}$NL}$NL$NLvoid \6::insertMap(\2  iKey,  \3 Val)$NL{$NL$NL$TB\4_ITER f_it;$NL$NL$TBf_it = \5.find(iKey);$NL$TBif(f_it == \5.end())$NL$TB{$NL$TB$TB\5.insert(pair<\2  ,  \3>(iKey,Val));$NL$TB}$NL$TBelse$NL$TB{$NL$TB$TBf_it->second = Val;$NL$TB}$NL}$NL$NLbool \6::findMap(\2  iKey)$NL{$NL$TBbool bFlag = false;$NL$TB\4_ITER f_it;$NL$NL$TBf_it = \5.find(iKey);$NL$TBif(f_it == \5.end())$NL$TB{$NL//$TB$TBcout<<"not find key:" << iKey <<endl;$NL$TB}$NL$TBelse$NL$TB{$NL//$TB$TBcout<<"find key:" << iKey <<endl;$NL$TB$TBbFlag = true;$NL$TB}$NL$NL$TBreturn bFlag;$NL}$NL$NL$NLvoid \6::clearMap()$NL{$NL$TB\5.clear();$NL}$NL$NLbool \6::eraseMap(\2  iKey)$NL{$NL$TB\4_ITER f_it;;$NL$TBf_it = \5.find(iKey);$NL$TBif(f_it == \5.end())$NL$TB{$NL$TB$TBreturn false;$NL$TB}$NL$TB\5.erase(f_it);$NL$NL$TBreturn true;$NL}