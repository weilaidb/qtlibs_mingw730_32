////////////// 基本类型 basetype.h 头文件 $NL$NL$NL#ifndef BASETYPE_H$NL#define BASETYPE_H$NL$NLtypedef char CHAR;$NLtypedef unsigned char BYTE;$NL$NLtypedef char INT8;$NLtypedef short INT16;$NLtypedef int INT32;$NLtypedef long long INT64;$NL$NLtypedef unsigned char UINT8;$NLtypedef unsigned short UINT16;$NLtypedef unsigned int UINT32;$NLtypedef unsigned long long UINT64;$NL$NLtypedef unsigned short WORD;$NLtypedef unsigned short WORD16;$NLtypedef unsigned int   WORD32;$NLtypedef unsigned long long WORD64;$NL$NL$NL$NL#endif // BASETYPE_H$NL$NL$NL$NL$NL////////////// \1 头文件 $NL$NL/***************************************************************************$NL** 版权所有:   Copyright (c) 2020-2030  ******************************$NL** 文件名称:  $LO<<<\1>>>.h$NL** 当前版本:  v1.0$NL** 作$TB者:$NL** 完成日期: $DATEX$NL** 修改记录:$NL** 修改记录:$NL** 修改日期:$NL** 版本号  :$NL** 修改人  :$NL** 修改内容:$NL***************************************************************************/$NL#ifndef $UP<<<\1>>>_H$NL#define $UP<<<\1>>>_H$NL/*****************************头文件****************************************/$NL#include "basetype.h"$NL$NL/*****************************宏定义****************************************/$NL#ifndef MIN$NL#define MIN(a,b) ((a)<(b)?(a):(b))$NL#endif$NL$NL#ifndef ARRAYSIZE$NL#define ARRAYSIZE(A) ((unsigned int)(sizeof(A)/sizeof((A)[0])))$NL#endif$NL$NL$NL#ifndef PRJNAMEMAX$NL#define PRJNAMEMAX 32$NL#endif$NL$NL/*****************************结构体或类型定义*******************************/$NLtypedef struct T_CallerPara{$NL$TBint test;$NL} T_CallerPara,*P_CallerPara;$NL$NL//回调声明$NLtypedef WORD32 (*pFnCaller)(P_CallerPara pt);$NL$NLtypedef enum {$NL$TBINDEX_NUM_TEST1,$NL$TBINDEX_NUM_TEST2,$NL$TBINDEX_NUM_TEST3,$NL$TBINDEX_NUM_TEST4,$NL$NL$TBINDEX_NUM_MAX,$NL}E_Arr_NUM;$NL$NLtypedef struct T_PrjSet{$NL$TBWORD32 uacArrNum;$NL$TBCHAR cName[PRJNAMEMAX];$NL$TBpFnCaller pFn;$NL}T_PrjSet,*P_PrjSet;$NL$NL/*****************************全局变量****************************************/$NL$NL$NL/*****************************本地变量****************************************/$NL$NL$NL/*****************************函数或类声明****************************************/$NLclass \1$NL{$NLpublic:$NL$TB\1();$NL$TBvirtual WORD32 init();$NL$TBvirtual WORD32 show();$NL$TBWORD32 setPrjSet(WORD32 dwIndex, WORD32 dwNum);$NL$TBWORD32 setPrjSet(WORD32 dwIndex, const CHAR *pName, WORD32 dwNum);$NL$TBWORD32 setPrjSet(WORD32 dwIndex, const CHAR *pName, WORD32 dwNum, pFnCaller pFn);$NL$TBWORD32 getPrjSet(WORD32 dwIndex);$NL$TBWORD32 procPrjSetCaller(WORD32 dwIndex, P_CallerPara pt);$NLprivate:$NL$TBT_PrjSet m_arrPrjSet[INDEX_NUM_MAX];$NL$NLpublic:$NL$TBstatic \1* GetInstance();$NL$TBstatic void SetInstance(\1* pInstance);$NL$NLprivate:$NL$TBstatic \1* m_pInstance;$NL};$NL$NL/*****************************函数或类实现****************************************/$NL$NL$NL$NL$NL$NL$NL$NL$NL/*****************************by extern "C"****************************************/$NL/*****************************头文件****************************************/$NL$NL$NL/*****************************宏定义****************************************/$NL$NL$NL#ifdef __cplusplus$NLextern "C" {$NL#endif$NL$NL/*****************************结构体或类型定义*******************************/$NL$NL$NL/*****************************全局变量****************************************/$NL$NL$NL/*****************************本地变量****************************************/$NL$NL$NL/*****************************函数或类声明****************************************/$NLWORD32 initBoardPrj();$NLWORD32 showBoard();$NL$NL/*****************************函数或类实现****************************************/$NL$NL$NL#ifdef __cplusplus$NL}$NL#endif$NL$NL$NL$NL$NL$NL#endif /* $UP<<<\1>>>_H */$NL$NL$NL$NL$NL$NL$NL////////////// \1 源文件 $NL$NL/***************************************************************************$NL** 版权所有:   Copyright (c) 2020-2030  ******************************$NL** 文件名称:  $LO<<<\1>>>.cpp$NL** 当前版本:  v1.0$NL** 作$TB者:$NL** 完成日期: $DATEX$NL** 修改记录:$NL** 修改记录:$NL** 修改日期:$NL** 版本号  :$NL** 修改人  :$NL** 修改内容:$NL***************************************************************************/$NL$NL$NL/*****************************头文件****************************************/$NL#include <stdio.h>$NL#include <stdlib.h>$NL#include <unistd.h>$NL#include <string.h>$NL#include "$LO<<<\1>>>.h"$NL#include "$LO<<<\2>>>.h"$NL$NL$NL/*****************************宏定义****************************************/$NL$NL/*****************************结构体或类型定义*******************************/$NL$NL$NL/*****************************全局变量****************************************/$NL\1* \1::m_pInstance = NULL;$NL$NL$NL/*****************************本地变量****************************************/$NL$NL$NL/*****************************函数或类声明****************************************/$NL$NL$NL/*****************************函数或类实现****************************************/$NL\1* \1::GetInstance()$NL{$NL$TBif ( m_pInstance == NULL )$NL$TB{$NL$TB$TBm_pInstance = new \1;$NL$TB}$NL$NL$TBreturn m_pInstance;$NL}$NL$NLvoid \1::SetInstance(\1* pInstance)$NL{$NL$TBm_pInstance = pInstance;$NL}$NL$NL\1::\1()$NL{$NL$NL}$NL$NLWORD32 \1::init()$NL{$NL$TBmemset(m_arrPrjSet,0, sizeof (m_arrPrjSet));$NL$NL$TBreturn 0;$NL}$NL$NLWORD32 \1::show()$NL{$NL$TBWORD32 dwLp =  0;$NL$TBP_PrjSet pt = NULL;$NL$NL$TBprintf("%-4s %-6s %-4s\n","No","Name","Val");$NL$TBfor(dwLp = 0;dwLp < ARRAYSIZE(m_arrPrjSet);dwLp++)$NL$TB{$NL$TB$TBpt = &m_arrPrjSet[dwLp];$NL$TB$TBprintf("%-4u %-6s %-4u\n",dwLp + 1,pt->cName,pt->uacArrNum);$NL$TB}$NL$NL$TBreturn 0;$NL}$NL$NLWORD32 \1::setPrjSet(WORD32 dwIndex, WORD32 dwNum)$NL{$NL$TBif(dwIndex >= INDEX_NUM_MAX)$NL$TB{$NL$TB$TBreturn INDEX_NUM_MAX;$NL$TB}$NL$TBm_arrPrjSet[dwIndex].uacArrNum = dwNum;$NL$NL$TBreturn m_arrPrjSet[dwIndex].uacArrNum;$NL}$NL$NLWORD32 \1::setPrjSet(WORD32 dwIndex, const CHAR *pName, WORD32 dwNum)$NL{$NL$TBif(dwIndex >= INDEX_NUM_MAX)$NL$TB{$NL$TB$TBreturn INDEX_NUM_MAX;$NL$TB}$NL$NL$TBWORD16 wMin = MIN(strlen(pName),PRJNAMEMAX);$NL$TBmemset(m_arrPrjSet[dwIndex].cName,0, PRJNAMEMAX);$NL$TBmemcpy(m_arrPrjSet[dwIndex].cName, pName, wMin);$NL$TBm_arrPrjSet[dwIndex].cName[PRJNAMEMAX - 1] = '\0';$NL$TBm_arrPrjSet[dwIndex].uacArrNum = dwNum;$NL$NL$TBreturn m_arrPrjSet[dwIndex].uacArrNum;$NL}$NL$NLWORD32 \1::setPrjSet(WORD32 dwIndex, const CHAR *pName, WORD32 dwNum, pFnCaller pFn)$NL{$NL$TBWORD32 dwRet = 0;$NL$NL$TBif(dwIndex >= INDEX_NUM_MAX)$NL$TB{$NL$TB$TBreturn INDEX_NUM_MAX;$NL$TB}$NL$TBdwRet = setPrjSet(dwIndex, pName, dwNum);$NL$TBif(dwRet != 0)$NL$TB{$NL$TB$TBreturn INDEX_NUM_MAX;$NL$TB}$NL$TBm_arrPrjSet[dwIndex].pFn = pFn;$NL$NL$TBreturn m_arrPrjSet[dwIndex].uacArrNum;$NL}$NL$NLWORD32 \1::getPrjSet(WORD32 dwIndex)$NL{$NL$TBif(dwIndex >= INDEX_NUM_MAX)$NL$TB{$NL$TB$TBreturn INDEX_NUM_MAX;$NL$TB}$NL$TBreturn m_arrPrjSet[dwIndex].uacArrNum;$NL}$NL$NLWORD32 \1::procPrjSetCaller(WORD32 dwIndex, P_CallerPara pt)$NL{$NL$TBif(dwIndex >= INDEX_NUM_MAX)$NL$TB{$NL$TB$TBreturn INDEX_NUM_MAX;$NL$TB}$NL$NL$TBif(NULL == m_arrPrjSet[dwIndex].pFn)$NL$TB{$NL$TB$TBreturn 0;$NL$TB}$NL$NL$TBm_arrPrjSet[dwIndex].pFn(pt);$NL$NL$TBreturn 0;$NL}$NL$NL$NL$NL$NL$NL$NL$NL$NL$NL$NL/*****************************by extern "C"****************************************/$NL/*****************************头文件****************************************/$NL$NL$NL/*****************************宏定义****************************************/$NL$NL$NL#ifdef __cplusplus$NLextern "C" {$NL#endif$NL$NL/*****************************结构体或类型定义*******************************/$NL$NL$NL/*****************************全局变量****************************************/$NL$NL$NL/*****************************本地变量****************************************/$NL$NL$NL/*****************************函数或类声明****************************************/$NL$NL$NL/*****************************函数或类实现****************************************/$NLWORD32 initBoardPrj()$NL{$NL$TBif(1)$NL$TB{$NL$TB$TB\1::SetInstance(new \2());$NL$TB}$NL$TBelse if(0)$NL$TB{$NL$TB$TB//init other board$NL$TB}$NL$NL$TB\1::GetInstance()->init();$NL$NL$TBreturn 0;$NL}$NL$NLWORD32 showBoard()$NL{$NL$TB\1::GetInstance()->show();$NL$NL$TBreturn 0;$NL}$NL$NL#ifdef __cplusplus$NL}$NL#endif$NL$NL$NL$NL$NL$NL$NL$NL$NL$NL$NL$NL$NL$NL$NL$NL$NL$NL$NL////////////// \2 头文件 $NL$NL$NL#ifndef $UP<<<\2>>>_H$NL#define $UP<<<\2>>>_H$NL$NL#include "$LO<<<\1>>>.h"$NL$NLclass \2: public \1$NL{$NLpublic:$NL$TB\2();$NL$TBWORD32 init ();$NL$TBWORD32 show ();$NL};$NL$NL#endif // $UP<<<\2>>>_H$NL$NL$NL$NL$NL$NL$NL$NL////////////// \2 源文件 $NL$NL$NL$NL#include "$LO<<<\2>>>.h"$NL#include <stdio.h>$NL#include <stdlib.h>$NL#include <unistd.h>$NL#include <string.h>$NL$NL$NL\2::\2():\1()$NL{$NL$NL}$NL$NLWORD32 \2::init()$NL{$NL$TB//此处将基类数据初始化$NL$TB\1::init();$NL$NL$TBsetPrjSet(INDEX_NUM_TEST1,"test1", 10);$NL$TBsetPrjSet(INDEX_NUM_TEST2,"test2",10);$NL$NL$TBreturn 0;$NL}$NL$NLWORD32 \2::show()$NL{$NL//$TB\1::show();$NL$NL$TBprintf("\n====\2 show\n");$NL$NL$TBreturn 0;$NL}