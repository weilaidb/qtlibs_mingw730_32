#include <iostream>$NL#include <list>$NL#include <iomanip>$NLusing namespace std;$NL$NL//存储最大条目和删除步进数量$NL#define LISTSIZEMAX (\1)$NL#define LISTERASESTEP (LISTSIZEMAX/\2)$NL$NLvoid erase_list_first_n(list<string> &inlist, int n)$NL{$NL$TBint i = 0;$NL$TBlist<string>::iterator v = inlist.begin();$NL$TBwhile( v != inlist.end() && i < n) {$NL$TB$TBlist<string>::iterator tmp = v++;$NL$TB$TBinlist.erase(tmp);$NL$TB$TBi++;$NL$TB}$NL}$NL$NLvoid insert_list(list<string> &inlist, string input)$NL{$NL$TBif(inlist.size() > LISTSIZEMAX)$NL$TB{$NL$TB$TBerase_list_first_n(inlist, LISTERASESTEP);$NL$TB$TB// cout << "erase item" << endl;$NL$TB}$NL$TBinlist.push_back(input);$NL}$NL$NLvoid clear_list(list<string> &inlist)$NL{$NL$TBinlist.clear();$NL}$NL$NLvoid show_list(const char *pTip, list<string> &inlist)$NL{$NL$TB// 使用迭代器 iterator 访问值$NL$TBint i = 0;$NL$TBcout << pTip << " size = " << inlist.size() << endl;$NL$TBlist<string>::iterator v = inlist.begin();$NL$TBwhile( v != inlist.end()) {$NL$TB$TBcout << "value of " << pTip << " [" << setw( 3 )  << ++i  << "] = " << *v << endl;$NL$TB$TBv++;$NL$TB}$NL}$NL//反向输出打印$NLvoid show_list_r(const char *pTip, list<string> &inlist)$NL{$NL$TB// 使用迭代器 iterator 访问值$NL$TBint i = 0;$NL$TBcout << pTip << "(reverse) size = " << inlist.size() << endl;$NL$TBlist<string>::reverse_iterator v = inlist.rbegin();$NL$TBwhile( v != inlist.rend()) {$NL$TB$TBcout << "value of " << pTip << " [" << setw( 3 )  << ++i  << "] = " << *v << endl;$NL$TB$TBv++;$NL$TB}$NL$TBcout << pTip << "(reverse) size = " << inlist.size() << endl;$NL}$NL$NL$NL$NLint test()$NL{$NL$TB// 创建一个向量存储 int$NL$TBlist<string> \3;$NL$TBint i;$NL$NL$TB// 显示 \3 的原始大小$NL$TBcout << "list size = " << \3.size() << endl;$NL$NL$TB// 推入 5 个值到向量中$NL$TBfor(i = 0; i < 200; i++){$NL$TB$TBinsert_list(\3, to_string(i));$NL$TB}$NL$NL$TB// 显示 \3 扩展后的大小$NL$TBcout << "extended list size = " << \3.size() << endl;$NL$NL$TBshow_list_r("\3",\3);$NL$NL$TB// erase_list_first_n(\3, 52);$NL$TB// show_list("after erase first xx", \3);$NL$NL$TBreturn 0;$NL}$NL$NL$NLint main()$NL{$NL$TBtest();$NL$NL$TBreturn 0;$NL}