☆ API名称
kernel/atom原子操作

☆ 简介
Linux内核技术面试常见题型如下：
1、自旋锁的临界区不允许发生抢占？
2、信号量如何实现？
3、MCS锁机制的实现原理 ？
4、RCU实现的原理机制？
5、在编写内核代码时候，应该如何选择互斥锁和信号量？


一、原子操作与内存屏障
1、临界区(critical region):指操作和访问共享数据的代码，其中的资源无法同时被多个执行线程访问，访问临界区的执行线程或代码路径称为并发源。在Linux内核当中产生并发访问的并发源主要有：软中断和tasklet、多处理器并发执行、内核抢占、异常和中断。我们要保护的是资源或数据，而不是保护代码。

单核并发源：不支持抢占内核不产生并发，支持内核抢占的产生并发，中断和tasklet打断进程执行
多核并发源：

保护的是数据，不是代码流程！！！
保护的是数据，不是代码流程！！！
保护的是数据，不是代码流程！！！




☆ 参数


☆ 返回值


☆ 错误码



☆ 示例


☆ 限制说明


☆ 安全说明


☆ 更新日志


☆ 支持情况


☆ 联系方式


☆提交日期
2024-01-12 08:25:08
========================================================================
========================================================================
