setsockopt函数原型为:
int setsockopt(int s, int level, int optname, void *optval, int optlen);

getsockopt函数原型为:
int getsocket(int s, int level, int name, caddr_t val, int *wvalsize);

选项:
optname        optval类型      变量                说明
SO_SNDBUF      int             so_snd.sb_hiwat     发送缓存高水位标记
SO_RCVBUF      int             so_rcv.sb_hiwat     接收缓存高水位标记
SO_SNDLOWAT    int             so_snd.sb_lowat     发送缓存低水位标记
SO_RCVLOWAT    int             so_rcv.sb_lowat     接收缓存低水位标记
SO_SNDTIMEO    struct timeval  so_snd.sb_timeo     发送超时值
SO_RCVTIMEO    struct timeval  so_rcv.sb_timeo     接收超时值
SO_DEBUG       int             so_options          记录插口调试信息
SO_REUSEADDR   int             so_options          插口能重新使用一个本地地址
SO_REUSEPORT   int             so_options          插口能重新使用一个本地端口
SO_KEEPALIVE   int             so_options          协议查询空闲的连接
SO_DONTROUTE   int             so_options          旁路路由表
SO_BROADCAST   int             so_options          插口支持广播报文
SO_USELOOPBACK int             so_options          仅用于选路域插口；发送进程接收自己的选路报文
SO_OOBINLINE   int             so_options          协议排队内联的带外数据
SO_LINGER      struct linger   so_linger           插口关闭但仍发送剩余数据
SO_ERROR       int             so_error            获取差错状态并清除；只用于getsockopt
SO_TYPE        int             so_type             获取插口类型；只用于getsockopt
其他                                               返回ENOPROTOOPT















