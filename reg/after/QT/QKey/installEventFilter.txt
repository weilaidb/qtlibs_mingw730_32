\1->installEventFilter(this);$NL$NL$NLbool eventFilter(QObject *target, QEvent *event);$NLvoid InstallEventFilterSets(void);$NL$NL$NLvoid MainWindow::InstallEventFilterSets(void)$NL{$NL$NL}$NL$NLbool MainWindow::eventFilter_\1(QObject *target, QEvent *event)$NL{$NL//    qDebug("eventFilter_\1");$NL$NL    if (target == ui->textEdit)$NL    {$NL        //双击出现listView界面$NL        if (event->type() == QEvent::MouseButtonDblClick) {$NL            return true;$NL        }$NL        //单击隐藏listView界面$NL        if (event->type() == QEvent::MouseButtonPress) {$NL            return true;$NL        }$NL        //按键处理$NL        if(event->type() == QEvent::KeyPress)$NL        {$NL            QKeyEvent *keyEvent = static_cast<QKeyEvent *>(event);$NL            int key = keyEvent->key();$NL            if (Qt::Key_Down == key) {$NL                qDebug()<<"Key_Down !!";$NL            } else if (Qt::Key_Up == key) {$NL                qDebug()<<"Key_Up !!";$NL            } else if (Qt::Key_Escape == key) {$NL                qDebug()<<"Key_Escape !!";$NL$NL            } else if (Qt::Key_Enter == key || Qt::Key_Return == key) {$NL                qDebug()<<"Key_Enter   Key_Return!!";$NL            }$NL            else {$NL                qDebug()<<"else Key !!";$NL            }$NL        }$NL    }$NL    return QObject::eventFilter(target, event);$NL}$NL$NL$NLbool autoCCode::eventFilter(QObject *target, QEvent *event)$NL{$NL    qDebug() << "eventFilter";$NL$NL    eventFilter_\1(target, event);$NL    return Qtargetect::eventFilter(target, event);$NL}