void Dialog::on_btnGetHostInfo_clicked()$NL{//QHostInfo获取主机信息$NL//    ui->plainTextEdit->clear();$NL$NL    QString hostName=QHostInfo::localHostName();//本地主机名$NL    ui->plainTextEdit->appendPlainText("本机主机名："+hostName+"\n");$NL$NL    QHostInfo   hostInfo=QHostInfo::fromName(hostName); //本机IP地址$NL$NL    QList<QHostAddress> addList=hostInfo.addresses();//IP地址列表$NL    if (!addList.isEmpty())$NL    for (int i=0;i<addList.count();i++)$NL    {$NL        QHostAddress aHost=addList.at(i); //每一项是一个QHostAddress$NL        bool show=ui->chkOnlyIPv4->isChecked();//只显示IPv4$NL        if (show)$NL            show=(QAbstractSocket::IPv4Protocol==aHost.protocol()); //协议类型，$NL        else$NL            show=true;$NL        if (show) {$NL        ui->plainTextEdit->appendPlainText("协 议："+protocolName(aHost.protocol()));//协议类型$NL        ui->plainTextEdit->appendPlainText("本机IP地址："+aHost.toString()); //IP地址$NL        ui->plainTextEdit->appendPlainText("");$NL        }$NL    }$NL}$NL$NL$NL$NLvoid Dialog::lookedUpHostInfo(const QHostInfo &host)$NL{//查找主机信息的槽函数$NL//    ui->plainTextEdit->clear();$NL    QList<QHostAddress> addList=host.addresses();//$NL    if (!addList.isEmpty())$NL    for (int i=0;i<addList.count();i++)$NL    {$NL        QHostAddress aHost=addList.at(i);$NL        bool show=ui->chkOnlyIPv4->isChecked();//只显示IPv4$NL        if (show)$NL            show=QAbstractSocket::IPv4Protocol==aHost.protocol();$NL        else$NL            show=true;$NL$NL        if (show) {$NL        ui->plainTextEdit->appendPlainText("协 议："+protocolName(aHost.protocol()));$NL        ui->plainTextEdit->appendPlainText(aHost.toString());$NL        }$NL    }$NL}$NL$NL$NLvoid Dialog::on_btnLookup_clicked()$NL{//查找主机信息$NL    QString hostname=ui->editHost->text(); //主机名$NL    ui->plainTextEdit->appendPlainText("正在查找查找主机信息："+hostname);$NL    QHostInfo::lookupHost(hostname,this,SLOT(lookedUpHostInfo(QHostInfo)));$NL}$NL