/*****************************宏定义****************************************/$NL#define CHECK_POINTER_RET(ptr, retcode) \$NLdo{\$NL    if(NULL == ptr){\$NL        return retcode;\$NL    }\$NL}while(0)$NL$NL$NL#define MEMGET \2$NL#define MEMPUT \3$NL$NL//释放节点$NL#define FREENODE(ptr) \$NLdo{\$NL    if(NULL != ptr)\$NL    {\$NL        MEMPUT(ptr);\$NL        ptr = NULL;\$NL    }\$NL}while(0)$NL$NL$NL//函数实现$NLint \1(CHAR *pTips, BYTE *pData, WORD16 wLen)$NL{$NL    int iLen = 0;$NL    WORD16 wLp =  0;$NL    WORD32 dwTotal =  0;$NL    WORD32 dwMemLen = wLen * 2 + 1;$NL    CHAR *pBuf = (CHAR *)MEMGET(dwMemLen);$NL    CHECK_POINTER_RET(pBuf, -1);$NL    memset(pBuf, 0, dwMemLen);$NL$NL    for(wLp = 0;wLp < wLen;wLp++)$NL    {$NL        iLen = snprintf(pBuf + dwTotal, 2,"%02x", pData[wLp]);$NL        if(iLen < 0)$NL        {$NL            pBuf[dwMemLen] = '\0';$NL            break;$NL        }$NL        dwTotal += 2;$NL    }$NL$NL    /* do something here, eg print */$NL    /* do something here, eg print */$NL    /* do something here, eg print */$NL    \4("[%s],Len:%u, Msg: %s\n", pTips, wLen, pBuf);$NL$NL$NL    FREENODE(pBuf);$NL    return 0;$NL}$NL$NL$NL